{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.9", "generated_at": "2024-03-18T10:43:21.284861Z", "invocation_id": "fa2cefff-15fb-4dc2-b596-057639376cc6", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.501997Z", "completed_at": "2024-03-18T10:43:17.532076Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.550861Z", "completed_at": "2024-03-18T10:43:17.550869Z"}], "thread_id": "Thread-1", "execution_time": 0.05551004409790039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__abandoned_checkout_discount_code_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"shopify_source_integration_tests_10\".\"shopify_abandoned_checkout_discount_code_data\"", "relation_name": "\"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__abandoned_checkout_discount_code_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.527196Z", "completed_at": "2024-03-18T10:43:17.537668Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.555644Z", "completed_at": "2024-03-18T10:43:17.555652Z"}], "thread_id": "Thread-2", "execution_time": 0.04315614700317383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__abandoned_checkout_shipping_line_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"shopify_source_integration_tests_10\".\"shopify_abandoned_checkout_shipping_line_data\"", "relation_name": "\"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__abandoned_checkout_shipping_line_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.533817Z", "completed_at": "2024-03-18T10:43:17.555129Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.560266Z", "completed_at": "2024-03-18T10:43:17.560270Z"}], "thread_id": "Thread-3", "execution_time": 0.03715395927429199, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__abandoned_checkout_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"shopify_source_integration_tests_10\".\"shopify_abandoned_checkout_data\"", "relation_name": "\"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__abandoned_checkout_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.538563Z", "completed_at": "2024-03-18T10:43:17.556023Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.560837Z", "completed_at": "2024-03-18T10:43:17.560840Z"}], "thread_id": "Thread-4", "execution_time": 0.037249088287353516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__collection_product_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"shopify_source_integration_tests_10\".\"shopify_collection_product_data\"", "relation_name": "\"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__collection_product_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.547636Z", "completed_at": "2024-03-18T10:43:17.556339Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.561373Z", "completed_at": "2024-03-18T10:43:17.561376Z"}], "thread_id": "Thread-7", "execution_time": 0.03334498405456543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__customer_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"shopify_source_integration_tests_10\".\"shopify_customer_data\"", "relation_name": "\"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__customer_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.544774Z", "completed_at": "2024-03-18T10:43:17.557267Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.562231Z", "completed_at": "2024-03-18T10:43:17.562236Z"}], "thread_id": "Thread-6", "execution_time": 0.03454995155334473, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__customer_tag_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"shopify_source_integration_tests_10\".\"shopify_customer_tag_data\"", "relation_name": "\"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__customer_tag_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.541844Z", "completed_at": "2024-03-18T10:43:17.557541Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.562562Z", "completed_at": "2024-03-18T10:43:17.562566Z"}], "thread_id": "Thread-5", "execution_time": 0.035536766052246094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__collection_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"shopify_source_integration_tests_10\".\"shopify_collection_data\"", "relation_name": "\"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__collection_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.551177Z", "completed_at": "2024-03-18T10:43:17.558923Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.564336Z", "completed_at": "2024-03-18T10:43:17.564339Z"}], "thread_id": "Thread-8", "execution_time": 0.03507518768310547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__discount_code_tmp", "compiled": true, "compiled_code": "-- this model will be all NULL until you create a discount code in Shopify\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"shopify_source_integration_tests_10\".\"shopify_discount_code_data\"", "relation_name": "\"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__discount_code_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.568110Z", "completed_at": "2024-03-18T10:43:17.578448Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.624855Z", "completed_at": "2024-03-18T10:43:17.624863Z"}], "thread_id": "Thread-1", "execution_time": 0.06800484657287598, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__fulfillment_event_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"shopify_source_integration_tests_10\".\"shopify_fulfillment_event_data\"", "relation_name": "\"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__fulfillment_event_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.572712Z", "completed_at": "2024-03-18T10:43:17.579664Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.628318Z", "completed_at": "2024-03-18T10:43:17.628324Z"}], "thread_id": "Thread-2", "execution_time": 0.06699180603027344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__fulfillment_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"shopify_source_integration_tests_10\".\"shopify_fulfillment_data\"", "relation_name": "\"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__fulfillment_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.583236Z", "completed_at": "2024-03-18T10:43:17.628763Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.633159Z", "completed_at": "2024-03-18T10:43:17.633165Z"}], "thread_id": "Thread-4", "execution_time": 0.059977054595947266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__inventory_level_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"shopify_source_integration_tests_10\".\"shopify_inventory_level_data\"", "relation_name": "\"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__inventory_level_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.580174Z", "completed_at": "2024-03-18T10:43:17.629085Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.634304Z", "completed_at": "2024-03-18T10:43:17.634308Z"}], "thread_id": "Thread-3", "execution_time": 0.064910888671875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__inventory_item_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"shopify_source_integration_tests_10\".\"shopify_inventory_item_data\"", "relation_name": "\"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__inventory_item_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.621898Z", "completed_at": "2024-03-18T10:43:17.631066Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.636181Z", "completed_at": "2024-03-18T10:43:17.636185Z"}], "thread_id": "Thread-5", "execution_time": 0.061231136322021484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__order_adjustment_tmp", "compiled": true, "compiled_code": "-- this model will be all NULL until you have made an order adjustment in Shopify\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"shopify_source_integration_tests_10\".\"shopify_order_adjustment_data\"", "relation_name": "\"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__order_adjustment_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.618727Z", "completed_at": "2024-03-18T10:43:17.631355Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.636460Z", "completed_at": "2024-03-18T10:43:17.636464Z"}], "thread_id": "Thread-6", "execution_time": 0.062235116958618164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__metafield_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"shopify_source_integration_tests_10\".\"shopify_metafield_data\"", "relation_name": "\"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__metafield_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.587316Z", "completed_at": "2024-03-18T10:43:17.631620Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.636734Z", "completed_at": "2024-03-18T10:43:17.636737Z"}], "thread_id": "Thread-7", "execution_time": 0.0632319450378418, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__location_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"shopify_source_integration_tests_10\".\"shopify_location_data\"", "relation_name": "\"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__location_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.625176Z", "completed_at": "2024-03-18T10:43:17.632096Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.637519Z", "completed_at": "2024-03-18T10:43:17.637527Z"}], "thread_id": "Thread-8", "execution_time": 0.06197500228881836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__order_discount_code_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"shopify_source_integration_tests_10\".\"shopify_order_discount_code_data\"", "relation_name": "\"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__order_discount_code_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.641188Z", "completed_at": "2024-03-18T10:43:17.652034Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.670795Z", "completed_at": "2024-03-18T10:43:17.670802Z"}], "thread_id": "Thread-1", "execution_time": 0.04017519950866699, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__order_line_refund_tmp", "compiled": true, "compiled_code": "-- this model will be all NULL until you have made an order line refund in Shopify\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"shopify_source_integration_tests_10\".\"shopify_order_line_refund_data\"", "relation_name": "\"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__order_line_refund_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.645355Z", "completed_at": "2024-03-18T10:43:17.656071Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.673942Z", "completed_at": "2024-03-18T10:43:17.673947Z"}], "thread_id": "Thread-2", "execution_time": 0.04114198684692383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__order_line_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"shopify_source_integration_tests_10\".\"shopify_order_line_data\"", "relation_name": "\"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__order_line_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.653142Z", "completed_at": "2024-03-18T10:43:17.670510Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.676788Z", "completed_at": "2024-03-18T10:43:17.676792Z"}], "thread_id": "Thread-4", "execution_time": 0.03113865852355957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__order_note_attribute_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"shopify_source_integration_tests_10\".\"shopify_order_note_attribute_data\"", "relation_name": "\"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__order_note_attribute_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.657324Z", "completed_at": "2024-03-18T10:43:17.675321Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.680745Z", "completed_at": "2024-03-18T10:43:17.680749Z"}], "thread_id": "Thread-3", "execution_time": 0.0340118408203125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__order_shipping_line_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"shopify_source_integration_tests_10\".\"shopify_order_shipping_line_data\"", "relation_name": "\"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__order_shipping_line_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.660779Z", "completed_at": "2024-03-18T10:43:17.675570Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.681073Z", "completed_at": "2024-03-18T10:43:17.681080Z"}], "thread_id": "Thread-5", "execution_time": 0.03340911865234375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__order_shipping_tax_line_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"shopify_source_integration_tests_10\".\"shopify_order_shipping_tax_line_data\"", "relation_name": "\"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__order_shipping_tax_line_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.663646Z", "completed_at": "2024-03-18T10:43:17.675829Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.681426Z", "completed_at": "2024-03-18T10:43:17.681433Z"}], "thread_id": "Thread-6", "execution_time": 0.03342008590698242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__order_tag_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"shopify_source_integration_tests_10\".\"shopify_order_tag_data\"", "relation_name": "\"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__order_tag_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.667508Z", "completed_at": "2024-03-18T10:43:17.677069Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.682535Z", "completed_at": "2024-03-18T10:43:17.682539Z"}], "thread_id": "Thread-7", "execution_time": 0.03409409523010254, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__order_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"shopify_source_integration_tests_10\".\"shopify_order_data\"", "relation_name": "\"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__order_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.671115Z", "completed_at": "2024-03-18T10:43:17.677661Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.683110Z", "completed_at": "2024-03-18T10:43:17.683116Z"}], "thread_id": "Thread-8", "execution_time": 0.03693509101867676, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__order_url_tag_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"shopify_source_integration_tests_10\".\"shopify_order_url_tag_data\"", "relation_name": "\"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__order_url_tag_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.686070Z", "completed_at": "2024-03-18T10:43:17.696747Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.712012Z", "completed_at": "2024-03-18T10:43:17.712017Z"}], "thread_id": "Thread-1", "execution_time": 0.04031205177307129, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__price_rule_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"shopify_source_integration_tests_10\".\"shopify_price_rule_data\"", "relation_name": "\"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__price_rule_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.690739Z", "completed_at": "2024-03-18T10:43:17.701300Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.719117Z", "completed_at": "2024-03-18T10:43:17.719123Z"}], "thread_id": "Thread-2", "execution_time": 0.039431095123291016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__product_image_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"shopify_source_integration_tests_10\".\"shopify_product_image_data\"", "relation_name": "\"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__product_image_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.697047Z", "completed_at": "2024-03-18T10:43:17.705984Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.721584Z", "completed_at": "2024-03-18T10:43:17.721588Z"}], "thread_id": "Thread-4", "execution_time": 0.03933596611022949, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__product_tag_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"shopify_source_integration_tests_10\".\"shopify_product_tag_data\"", "relation_name": "\"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__product_tag_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.702802Z", "completed_at": "2024-03-18T10:43:17.719792Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.725460Z", "completed_at": "2024-03-18T10:43:17.725465Z"}], "thread_id": "Thread-3", "execution_time": 0.03267097473144531, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__product_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"shopify_source_integration_tests_10\".\"shopify_product_data\"", "relation_name": "\"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__product_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.709211Z", "completed_at": "2024-03-18T10:43:17.721837Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.727331Z", "completed_at": "2024-03-18T10:43:17.727334Z"}], "thread_id": "Thread-6", "execution_time": 0.033689260482788086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__refund_tmp", "compiled": true, "compiled_code": "-- this model will be all NULL until you create a refund in Shopify\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"shopify_source_integration_tests_10\".\"shopify_refund_data\"", "relation_name": "\"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__refund_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.706267Z", "completed_at": "2024-03-18T10:43:17.722274Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.727665Z", "completed_at": "2024-03-18T10:43:17.727668Z"}], "thread_id": "Thread-5", "execution_time": 0.03465127944946289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__product_variant_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"shopify_source_integration_tests_10\".\"shopify_product_variant_data\"", "relation_name": "\"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__product_variant_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.712306Z", "completed_at": "2024-03-18T10:43:17.722885Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.728450Z", "completed_at": "2024-03-18T10:43:17.728453Z"}], "thread_id": "Thread-7", "execution_time": 0.031140804290771484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__shop_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"shopify_source_integration_tests_10\".\"shopify_shop_data\"", "relation_name": "\"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__shop_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.716037Z", "completed_at": "2024-03-18T10:43:17.723603Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.728956Z", "completed_at": "2024-03-18T10:43:17.728960Z"}], "thread_id": "Thread-8", "execution_time": 0.03463482856750488, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__tax_line_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"shopify_source_integration_tests_10\".\"shopify_tax_line_data\"", "relation_name": "\"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__tax_line_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.740533Z", "completed_at": "2024-03-18T10:43:17.742539Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.748468Z", "completed_at": "2024-03-18T10:43:17.748474Z"}], "thread_id": "Thread-4", "execution_time": 0.026775121688842773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_abandoned_checkout_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.731724Z", "completed_at": "2024-03-18T10:43:17.743392Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.750194Z", "completed_at": "2024-03-18T10:43:17.750198Z"}], "thread_id": "Thread-1", "execution_time": 0.031000852584838867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__tender_transaction_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"shopify_source_integration_tests_10\".\"shopify_tender_transaction_data\"", "relation_name": "\"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__tender_transaction_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.735623Z", "completed_at": "2024-03-18T10:43:17.744029Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.751929Z", "completed_at": "2024-03-18T10:43:17.751932Z"}], "thread_id": "Thread-2", "execution_time": 0.03104686737060547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__transaction_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"shopify_source_integration_tests_10\".\"shopify_transaction_data\"", "relation_name": "\"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__transaction_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.746418Z", "completed_at": "2024-03-18T10:43:17.747706Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.758024Z", "completed_at": "2024-03-18T10:43:17.758028Z"}], "thread_id": "Thread-3", "execution_time": 0.021024703979492188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_abandoned_checkout_discount_code_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.748744Z", "completed_at": "2024-03-18T10:43:17.749914Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.758993Z", "completed_at": "2024-03-18T10:43:17.758997Z"}], "thread_id": "Thread-6", "execution_time": 0.0188448429107666, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_abandoned_checkout_shipping_line_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.750466Z", "completed_at": "2024-03-18T10:43:17.751648Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.759544Z", "completed_at": "2024-03-18T10:43:17.759546Z"}], "thread_id": "Thread-5", "execution_time": 0.019002914428710938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_collection_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.752450Z", "completed_at": "2024-03-18T10:43:17.753627Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.760729Z", "completed_at": "2024-03-18T10:43:17.760733Z"}], "thread_id": "Thread-7", "execution_time": 0.0192410945892334, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_collection_product_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.753907Z", "completed_at": "2024-03-18T10:43:17.755752Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.761005Z", "completed_at": "2024-03-18T10:43:17.761007Z"}], "thread_id": "Thread-8", "execution_time": 0.019371747970581055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_customer_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.766699Z", "completed_at": "2024-03-18T10:43:17.768044Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.776137Z", "completed_at": "2024-03-18T10:43:17.776143Z"}], "thread_id": "Thread-4", "execution_time": 0.022469282150268555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_customer_tag_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.768761Z", "completed_at": "2024-03-18T10:43:17.770013Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.778562Z", "completed_at": "2024-03-18T10:43:17.778565Z"}], "thread_id": "Thread-1", "execution_time": 0.02231907844543457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_discount_code_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.770695Z", "completed_at": "2024-03-18T10:43:17.771857Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.780257Z", "completed_at": "2024-03-18T10:43:17.780261Z"}], "thread_id": "Thread-2", "execution_time": 0.022192955017089844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_fulfillment_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.774239Z", "completed_at": "2024-03-18T10:43:17.775412Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.785481Z", "completed_at": "2024-03-18T10:43:17.785485Z"}], "thread_id": "Thread-3", "execution_time": 0.02188587188720703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_fulfillment_event_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.776399Z", "completed_at": "2024-03-18T10:43:17.778281Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.786434Z", "completed_at": "2024-03-18T10:43:17.786437Z"}], "thread_id": "Thread-6", "execution_time": 0.020717144012451172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_inventory_item_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.778864Z", "completed_at": "2024-03-18T10:43:17.779984Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.786976Z", "completed_at": "2024-03-18T10:43:17.786978Z"}], "thread_id": "Thread-5", "execution_time": 0.01957392692565918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_inventory_level_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.780746Z", "completed_at": "2024-03-18T10:43:17.781901Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.788000Z", "completed_at": "2024-03-18T10:43:17.788003Z"}], "thread_id": "Thread-7", "execution_time": 0.018619060516357422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_location_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.782167Z", "completed_at": "2024-03-18T10:43:17.783271Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.788262Z", "completed_at": "2024-03-18T10:43:17.788265Z"}], "thread_id": "Thread-8", "execution_time": 0.01869797706604004, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_metafield_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.793969Z", "completed_at": "2024-03-18T10:43:17.796052Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.805273Z", "completed_at": "2024-03-18T10:43:17.805278Z"}], "thread_id": "Thread-4", "execution_time": 0.024466991424560547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_order_adjustment_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.796846Z", "completed_at": "2024-03-18T10:43:17.798018Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.806949Z", "completed_at": "2024-03-18T10:43:17.806952Z"}], "thread_id": "Thread-1", "execution_time": 0.024387121200561523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_order_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.799846Z", "completed_at": "2024-03-18T10:43:17.801034Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.809255Z", "completed_at": "2024-03-18T10:43:17.809259Z"}], "thread_id": "Thread-2", "execution_time": 0.02431797981262207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_order_discount_code_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.803389Z", "completed_at": "2024-03-18T10:43:17.804575Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.814836Z", "completed_at": "2024-03-18T10:43:17.814840Z"}], "thread_id": "Thread-3", "execution_time": 0.024161100387573242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_order_line_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.805532Z", "completed_at": "2024-03-18T10:43:17.806676Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.815824Z", "completed_at": "2024-03-18T10:43:17.815827Z"}], "thread_id": "Thread-6", "execution_time": 0.022210121154785156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_order_line_refund_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.807201Z", "completed_at": "2024-03-18T10:43:17.808978Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.816426Z", "completed_at": "2024-03-18T10:43:17.816429Z"}], "thread_id": "Thread-5", "execution_time": 0.020060062408447266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_order_note_attribute_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.809796Z", "completed_at": "2024-03-18T10:43:17.811041Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.817523Z", "completed_at": "2024-03-18T10:43:17.817526Z"}], "thread_id": "Thread-7", "execution_time": 0.019098997116088867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_order_shipping_line_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.811342Z", "completed_at": "2024-03-18T10:43:17.812476Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.817805Z", "completed_at": "2024-03-18T10:43:17.817808Z"}], "thread_id": "Thread-8", "execution_time": 0.01922917366027832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_order_shipping_tax_line_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.823500Z", "completed_at": "2024-03-18T10:43:17.824877Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.833998Z", "completed_at": "2024-03-18T10:43:17.834003Z"}], "thread_id": "Thread-4", "execution_time": 0.02312779426574707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_order_tag_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.825591Z", "completed_at": "2024-03-18T10:43:17.826814Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.835638Z", "completed_at": "2024-03-18T10:43:17.835642Z"}], "thread_id": "Thread-1", "execution_time": 0.02293086051940918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_order_url_tag_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.827566Z", "completed_at": "2024-03-18T10:43:17.829657Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.837236Z", "completed_at": "2024-03-18T10:43:17.837240Z"}], "thread_id": "Thread-2", "execution_time": 0.02289605140686035, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_price_rule_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.832127Z", "completed_at": "2024-03-18T10:43:17.833294Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.843184Z", "completed_at": "2024-03-18T10:43:17.843189Z"}], "thread_id": "Thread-3", "execution_time": 0.022778987884521484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_product_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.834254Z", "completed_at": "2024-03-18T10:43:17.835370Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.844162Z", "completed_at": "2024-03-18T10:43:17.844165Z"}], "thread_id": "Thread-6", "execution_time": 0.021565914154052734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_product_image_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.835888Z", "completed_at": "2024-03-18T10:43:17.836971Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.844703Z", "completed_at": "2024-03-18T10:43:17.844706Z"}], "thread_id": "Thread-5", "execution_time": 0.02042698860168457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_product_tag_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.837701Z", "completed_at": "2024-03-18T10:43:17.838809Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.845725Z", "completed_at": "2024-03-18T10:43:17.845727Z"}], "thread_id": "Thread-7", "execution_time": 0.018521785736083984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_product_variant_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.839069Z", "completed_at": "2024-03-18T10:43:17.840766Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.845976Z", "completed_at": "2024-03-18T10:43:17.845979Z"}], "thread_id": "Thread-8", "execution_time": 0.01862502098083496, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_refund_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.851768Z", "completed_at": "2024-03-18T10:43:17.853129Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.861800Z", "completed_at": "2024-03-18T10:43:17.862017Z"}], "thread_id": "Thread-4", "execution_time": 0.040554046630859375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_shop_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.853854Z", "completed_at": "2024-03-18T10:43:17.855060Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.870333Z", "completed_at": "2024-03-18T10:43:17.870338Z"}], "thread_id": "Thread-1", "execution_time": 0.040548086166381836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_tax_line_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.855779Z", "completed_at": "2024-03-18T10:43:17.856919Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.875331Z", "completed_at": "2024-03-18T10:43:17.875336Z"}], "thread_id": "Thread-2", "execution_time": 0.04043078422546387, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_tender_transaction_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.859256Z", "completed_at": "2024-03-18T10:43:17.861094Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:17.888605Z", "completed_at": "2024-03-18T10:43:17.888609Z"}], "thread_id": "Thread-3", "execution_time": 0.03978395462036133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_transaction_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:17.894755Z", "completed_at": "2024-03-18T10:43:18.582000Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:18.591729Z", "completed_at": "2024-03-18T10:43:18.591739Z"}], "thread_id": "Thread-4", "execution_time": 0.7691037654876709, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__customer", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__customer_tmp\"\n\n),\n\nfields as (\n\n    select\n    \n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    accepts_marketing\n    \n as \n    \n    accepts_marketing\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    default_address_id\n    \n as \n    \n    default_address_id\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    first_name\n    \n as \n    \n    first_name\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    last_name\n    \n as \n    \n    last_name\n    \n, \n    \n    \n    orders_count\n    \n as \n    \n    orders_count\n    \n, \n    \n    \n    phone\n    \n as \n    \n    phone\n    \n, \n    \n    \n    state\n    \n as \n    \n    state\n    \n, \n    \n    \n    tax_exempt\n    \n as \n    \n    tax_exempt\n    \n, \n    \n    \n    total_spent\n    \n as \n    \n    total_spent\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    verified_email\n    \n as \n    \n    verified_email\n    \n, \n    cast(null as timestamp) as \n    \n    email_marketing_consent_consent_updated_at\n    \n , \n    cast(null as TEXT) as \n    \n    email_marketing_consent_opt_in_level\n    \n , \n    cast(null as TEXT) as \n    \n    email_marketing_consent_state\n    \n , \n    cast(null as TEXT) as \n    \n    note\n    \n , \n    cast(null as timestamp) as \n    \n    accepts_marketing_updated_at\n    \n , \n    cast(null as TEXT) as \n    \n    marketing_opt_in_level\n    \n , \n    cast(null as TEXT) as \n    \n    currency\n    \n \n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n\n),\n\nfinal as (\n\n    select \n        id as customer_id,\n        lower(email) as email,\n        first_name,\n        last_name,\n        orders_count,\n        default_address_id,\n        phone,\n        lower(state) as account_state,\n        tax_exempt as is_tax_exempt,\n        total_spent,\n        verified_email as is_verified_email,\n        note,\n        currency,\n        case \n            when email_marketing_consent_state is null then\n                case \n                    when accepts_marketing is null then null\n                    when accepts_marketing then 'subscribed (legacy)' \n                    else 'not_subscribed (legacy)' end\n            else lower(email_marketing_consent_state) end as marketing_consent_state,\n        lower(coalesce(email_marketing_consent_opt_in_level, marketing_opt_in_level)) as marketing_opt_in_level,\n\n        cast(\n    cast(cast(coalesce(accepts_marketing_updated_at, email_marketing_consent_consent_updated_at) as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as marketing_consent_updated_at,\n        cast(\n    cast(cast(created_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as created_timestamp,\n        cast(\n    cast(cast(updated_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as updated_timestamp,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n        \n        \n\n\n\n\n\n    from fields\n    \n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__customer\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:18.654007Z", "completed_at": "2024-03-18T10:43:19.329336Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:19.331705Z", "completed_at": "2024-03-18T10:43:19.331712Z"}], "thread_id": "Thread-3", "execution_time": 0.7368910312652588, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__metafield", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__metafield_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    key\n    \n as \n    \n    key\n    \n, \n    \n    \n    namespace\n    \n as \n    \n    namespace\n    \n, \n    \n    \n    owner_id\n    \n as \n    \n    owner_id\n    \n, \n    \n    \n    owner_resource\n    \n as \n    \n    owner_resource\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n, \n    \n    \n    value_type\n    \n as \n    \n    value_type\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    value\n    \n as \n    \n    value\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        id as metafield_id,\n        description,\n        namespace,\n        key,\n        value,\n        lower(coalesce(type, value_type)) as value_type,\n        owner_id as owner_resource_id,\n        lower(owner_resource) as owner_resource,\n        cast(\n    cast(cast(created_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as created_at,\n        cast(\n    cast(cast(updated_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as updated_at,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        lower(namespace || '_' || key) as metafield_reference,\n        case when id is null and updated_at is null\n            then row_number() over(partition by source_relation order by source_relation) = 1\n            else row_number() over(partition by id, source_relation order by updated_at desc) = 1\n        end as is_most_recent_record,\n        source_relation\n        \n    from fields\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__metafield\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:20.623119Z", "completed_at": "2024-03-18T10:43:20.640424Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:20.640987Z", "completed_at": "2024-03-18T10:43:20.640996Z"}], "thread_id": "Thread-3", "execution_time": 0.019690275192260742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__abandoned_checkout_discount_code_checkout_id__code__source_relation.7c343c0e84", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith  __dbt__cte__stg_shopify__abandoned_checkout_discount_code as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__abandoned_checkout_discount_code_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    checkout_id\n    \n as \n    \n    checkout_id\n    \n, \n    \n    \n    code\n    \n as \n    \n    code\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    discount_id\n    \n as \n    \n    discount_id\n    \n, \n    \n    \n    index\n    \n as \n    \n    index\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        checkout_id,\n        upper(code) as code,\n        discount_id,\n        amount,\n        type,\n        cast(\n    cast(cast(created_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as created_at,\n        cast(\n    cast(cast(updated_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as updated_at,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation, \n        case when checkout_id is null and code is null and index is null\n            then row_number() over(partition by source_relation order by source_relation)\n            else row_number() over(partition by checkout_id, upper(code), source_relation order by index desc)\n        end as index\n\n    from fields\n    \n)\n\nselect *\nfrom final\nwhere index = 1\n), validation_errors as (\n\n    select\n        checkout_id, code, source_relation\n    from __dbt__cte__stg_shopify__abandoned_checkout_discount_code\n    group by checkout_id, code, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:20.633858Z", "completed_at": "2024-03-18T10:43:20.647754Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:20.648400Z", "completed_at": "2024-03-18T10:43:20.648405Z"}], "thread_id": "Thread-1", "execution_time": 0.026623964309692383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__abandoned_checkout_discount_code_checkout_id.c00e9d48a7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__stg_shopify__abandoned_checkout_discount_code as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__abandoned_checkout_discount_code_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    checkout_id\n    \n as \n    \n    checkout_id\n    \n, \n    \n    \n    code\n    \n as \n    \n    code\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    discount_id\n    \n as \n    \n    discount_id\n    \n, \n    \n    \n    index\n    \n as \n    \n    index\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        checkout_id,\n        upper(code) as code,\n        discount_id,\n        amount,\n        type,\n        cast(\n    cast(cast(created_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as created_at,\n        cast(\n    cast(cast(updated_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as updated_at,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation, \n        case when checkout_id is null and code is null and index is null\n            then row_number() over(partition by source_relation order by source_relation)\n            else row_number() over(partition by checkout_id, upper(code), source_relation order by index desc)\n        end as index\n\n    from fields\n    \n)\n\nselect *\nfrom final\nwhere index = 1\n) select checkout_id\nfrom __dbt__cte__stg_shopify__abandoned_checkout_discount_code\nwhere checkout_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:20.642689Z", "completed_at": "2024-03-18T10:43:20.649244Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:20.650437Z", "completed_at": "2024-03-18T10:43:20.650441Z"}], "thread_id": "Thread-3", "execution_time": 0.009064197540283203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__customer_tag_customer_id__index__source_relation.a145b36d0f", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith  __dbt__cte__stg_shopify__customer_tag as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__customer_tag_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    index\n    \n as \n    \n    index\n    \n, \n    \n    \n    customer_id\n    \n as \n    \n    customer_id\n    \n, \n    \n    \n    value\n    \n as \n    \n    value\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        customer_id,\n        index,\n        value,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n\n    from fields\n)\n\nselect *\nfrom final\n), validation_errors as (\n\n    select\n        customer_id, index, source_relation\n    from __dbt__cte__stg_shopify__customer_tag\n    group by customer_id, index, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:20.651467Z", "completed_at": "2024-03-18T10:43:20.660602Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:20.661140Z", "completed_at": "2024-03-18T10:43:20.661145Z"}], "thread_id": "Thread-1", "execution_time": 0.011826276779174805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__customer_tag_customer_id.c532ce5351", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__stg_shopify__customer_tag as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__customer_tag_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    index\n    \n as \n    \n    index\n    \n, \n    \n    \n    customer_id\n    \n as \n    \n    customer_id\n    \n, \n    \n    \n    value\n    \n as \n    \n    value\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        customer_id,\n        index,\n        value,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n\n    from fields\n)\n\nselect *\nfrom final\n) select customer_id\nfrom __dbt__cte__stg_shopify__customer_tag\nwhere customer_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:20.656315Z", "completed_at": "2024-03-18T10:43:20.661392Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:20.662731Z", "completed_at": "2024-03-18T10:43:20.662737Z"}], "thread_id": "Thread-3", "execution_time": 0.007895946502685547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__customer_tag_index.1db05a64dd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__stg_shopify__customer_tag as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__customer_tag_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    index\n    \n as \n    \n    index\n    \n, \n    \n    \n    customer_id\n    \n as \n    \n    customer_id\n    \n, \n    \n    \n    value\n    \n as \n    \n    value\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        customer_id,\n        index,\n        value,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n\n    from fields\n)\n\nselect *\nfrom final\n) select index\nfrom __dbt__cte__stg_shopify__customer_tag\nwhere index is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:20.669684Z", "completed_at": "2024-03-18T10:43:20.690017Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:20.691695Z", "completed_at": "2024-03-18T10:43:20.691702Z"}], "thread_id": "Thread-3", "execution_time": 0.024013042449951172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__collection_collection_id.96b2719af2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__stg_shopify__collection as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__collection_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    disjunctive\n    \n as \n    \n    disjunctive\n    \n, \n    \n    \n    handle\n    \n as \n    \n    handle\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    published_at\n    \n as \n    \n    published_at\n    \n, \n    \n    \n    published_scope\n    \n as \n    \n    published_scope\n    \n, \n    \n    \n    rules\n    \n as \n    \n    rules\n    \n, \n    \n    \n    sort_order\n    \n as \n    \n    sort_order\n    \n, \n    \n    \n    title\n    \n as \n    \n    title\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        id as collection_id,\n        _fivetran_deleted as is_deleted,\n        case \n            when disjunctive is null then null\n            when disjunctive then 'disjunctive'\n            else 'conjunctive' end as rule_logic,\n        handle,\n        published_scope,\n        rules,\n        sort_order,\n        title,\n        cast(\n    cast(cast(published_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as published_at,\n        cast(\n    cast(cast(updated_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as updated_at,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n\n    from fields\n)\n\nselect *\nfrom final\n) select collection_id\nfrom __dbt__cte__stg_shopify__collection\nwhere collection_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:20.664402Z", "completed_at": "2024-03-18T10:43:20.690326Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:20.691985Z", "completed_at": "2024-03-18T10:43:20.691989Z"}], "thread_id": "Thread-1", "execution_time": 0.0305478572845459, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__collection_collection_id__source_relation.1df832a878", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith  __dbt__cte__stg_shopify__collection as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__collection_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    disjunctive\n    \n as \n    \n    disjunctive\n    \n, \n    \n    \n    handle\n    \n as \n    \n    handle\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    published_at\n    \n as \n    \n    published_at\n    \n, \n    \n    \n    published_scope\n    \n as \n    \n    published_scope\n    \n, \n    \n    \n    rules\n    \n as \n    \n    rules\n    \n, \n    \n    \n    sort_order\n    \n as \n    \n    sort_order\n    \n, \n    \n    \n    title\n    \n as \n    \n    title\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        id as collection_id,\n        _fivetran_deleted as is_deleted,\n        case \n            when disjunctive is null then null\n            when disjunctive then 'disjunctive'\n            else 'conjunctive' end as rule_logic,\n        handle,\n        published_scope,\n        rules,\n        sort_order,\n        title,\n        cast(\n    cast(cast(published_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as published_at,\n        cast(\n    cast(cast(updated_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as updated_at,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n\n    from fields\n)\n\nselect *\nfrom final\n), validation_errors as (\n\n    select\n        collection_id, source_relation\n    from __dbt__cte__stg_shopify__collection\n    group by collection_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:20.735806Z", "completed_at": "2024-03-18T10:43:20.746116Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:20.748655Z", "completed_at": "2024-03-18T10:43:20.748660Z"}], "thread_id": "Thread-1", "execution_time": 0.05442094802856445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__discount_code_discount_code_id__source_relation.cdfb802172", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith  __dbt__cte__stg_shopify__discount_code as (\n-- this model will be all NULL until you create a discount code in Shopify\n\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__discount_code_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    code\n    \n as \n    \n    code\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    price_rule_id\n    \n as \n    \n    price_rule_id\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    usage_count\n    \n as \n    \n    usage_count\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        id as discount_code_id,\n        upper(code) as code,\n        price_rule_id,\n        usage_count,\n        cast(\n    cast(cast(created_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as created_at,\n        cast(\n    cast(cast(updated_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as updated_at,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n        \n    from fields\n)\n\nselect *\nfrom final\n), validation_errors as (\n\n    select\n        discount_code_id, source_relation\n    from __dbt__cte__stg_shopify__discount_code\n    group by discount_code_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:20.696089Z", "completed_at": "2024-03-18T10:43:20.747304Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:20.749157Z", "completed_at": "2024-03-18T10:43:20.749160Z"}], "thread_id": "Thread-3", "execution_time": 0.0594329833984375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__abandoned_checkout_checkout_id__source_relation.46f03b4b58", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith  __dbt__cte__stg_shopify__abandoned_checkout as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__abandoned_checkout_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    abandoned_checkout_url\n    \n as \n    \n    abandoned_checkout_url\n    \n, \n    \n    \n    billing_address_address_1\n    \n as \n    \n    billing_address_address_1\n    \n, \n    cast(null as TEXT) as \n    \n    billing_address_address_2\n    \n , \n    \n    \n    billing_address_city\n    \n as \n    \n    billing_address_city\n    \n, \n    \n    \n    billing_address_company\n    \n as \n    \n    billing_address_company\n    \n, \n    \n    \n    billing_address_country\n    \n as \n    \n    billing_address_country\n    \n, \n    \n    \n    billing_address_country_code\n    \n as \n    \n    billing_address_country_code\n    \n, \n    \n    \n    billing_address_first_name\n    \n as \n    \n    billing_address_first_name\n    \n, \n    \n    \n    billing_address_last_name\n    \n as \n    \n    billing_address_last_name\n    \n, \n    \n    \n    billing_address_latitude\n    \n as \n    \n    billing_address_latitude\n    \n, \n    \n    \n    billing_address_longitude\n    \n as \n    \n    billing_address_longitude\n    \n, \n    \n    \n    billing_address_name\n    \n as \n    \n    billing_address_name\n    \n, \n    \n    \n    billing_address_phone\n    \n as \n    \n    billing_address_phone\n    \n, \n    \n    \n    billing_address_province\n    \n as \n    \n    billing_address_province\n    \n, \n    \n    \n    billing_address_province_code\n    \n as \n    \n    billing_address_province_code\n    \n, \n    \n    \n    billing_address_zip\n    \n as \n    \n    billing_address_zip\n    \n, \n    \n    \n    buyer_accepts_marketing\n    \n as \n    \n    buyer_accepts_marketing\n    \n, \n    \n    \n    cart_token\n    \n as \n    \n    cart_token\n    \n, \n    \n    \n    closed_at\n    \n as \n    \n    closed_at\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    customer_id\n    \n as \n    \n    customer_id\n    \n, \n    \n    \n    customer_locale\n    \n as \n    \n    customer_locale\n    \n, \n    \n    \n    device_id\n    \n as \n    \n    device_id\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    gateway\n    \n as \n    \n    gateway\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    landing_site_base_url\n    \n as \n    \n    landing_site_base_url\n    \n, \n    \n    \n    location_id\n    \n as \n    \n    location_id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    note\n    \n as \n    \n    note\n    \n, \n    \n    \n    phone\n    \n as \n    \n    phone\n    \n, \n    \n    \n    presentment_currency\n    \n as \n    \n    presentment_currency\n    \n, \n    \n    \n    referring_site\n    \n as \n    \n    referring_site\n    \n, \n    \n    \n    shipping_address_address_1\n    \n as \n    \n    shipping_address_address_1\n    \n, \n    cast(null as TEXT) as \n    \n    shipping_address_address_2\n    \n , \n    \n    \n    shipping_address_city\n    \n as \n    \n    shipping_address_city\n    \n, \n    \n    \n    shipping_address_company\n    \n as \n    \n    shipping_address_company\n    \n, \n    \n    \n    shipping_address_country\n    \n as \n    \n    shipping_address_country\n    \n, \n    \n    \n    shipping_address_country_code\n    \n as \n    \n    shipping_address_country_code\n    \n, \n    \n    \n    shipping_address_first_name\n    \n as \n    \n    shipping_address_first_name\n    \n, \n    \n    \n    shipping_address_last_name\n    \n as \n    \n    shipping_address_last_name\n    \n, \n    \n    \n    shipping_address_latitude\n    \n as \n    \n    shipping_address_latitude\n    \n, \n    \n    \n    shipping_address_longitude\n    \n as \n    \n    shipping_address_longitude\n    \n, \n    \n    \n    shipping_address_name\n    \n as \n    \n    shipping_address_name\n    \n, \n    \n    \n    shipping_address_phone\n    \n as \n    \n    shipping_address_phone\n    \n, \n    \n    \n    shipping_address_province\n    \n as \n    \n    shipping_address_province\n    \n, \n    \n    \n    shipping_address_province_code\n    \n as \n    \n    shipping_address_province_code\n    \n, \n    \n    \n    shipping_address_zip\n    \n as \n    \n    shipping_address_zip\n    \n, \n    \n    \n    source_name\n    \n as \n    \n    source_name\n    \n, \n    \n    \n    subtotal_price\n    \n as \n    \n    subtotal_price\n    \n, \n    \n    \n    taxes_included\n    \n as \n    \n    taxes_included\n    \n, \n    \n    \n    token\n    \n as \n    \n    token\n    \n, \n    \n    \n    total_discounts\n    \n as \n    \n    total_discounts\n    \n, \n    \n    \n    total_duties\n    \n as \n    \n    total_duties\n    \n, \n    \n    \n    total_line_items_price\n    \n as \n    \n    total_line_items_price\n    \n, \n    \n    \n    total_price\n    \n as \n    \n    total_price\n    \n, \n    \n    \n    total_tax\n    \n as \n    \n    total_tax\n    \n, \n    \n    \n    total_weight\n    \n as \n    \n    total_weight\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    user_id\n    \n as \n    \n    user_id\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_deleted as is_deleted,\n        abandoned_checkout_url,\n        billing_address_address_1,\n        billing_address_address_2,\n        billing_address_city,\n        billing_address_company,\n        billing_address_country,\n        billing_address_country_code,\n        billing_address_first_name,\n        billing_address_last_name,\n        billing_address_latitude,\n        billing_address_longitude,\n        billing_address_name,\n        billing_address_phone,\n        billing_address_province,\n        billing_address_province_code,\n        billing_address_zip,\n        buyer_accepts_marketing as has_buyer_accepted_marketing,\n        cart_token,\n        cast(\n    cast(cast(created_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as created_at,\n        cast(\n    cast(cast(closed_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as closed_at,\n        currency as shop_currency,\n        customer_id,\n        customer_locale,\n        device_id,\n        email,\n        gateway,\n        id as checkout_id,\n        landing_site_base_url,\n        location_id,\n        name,\n        note,\n        phone,\n        presentment_currency,\n        referring_site,\n        shipping_address_address_1,\n        shipping_address_address_2,\n        shipping_address_city,\n        shipping_address_company,\n        shipping_address_country,\n        shipping_address_country_code,\n        shipping_address_first_name,\n        shipping_address_last_name,\n        shipping_address_latitude,\n        shipping_address_longitude,\n        shipping_address_name,\n        shipping_address_phone,\n        shipping_address_province,\n        shipping_address_province_code,\n        shipping_address_zip,\n        source_name,\n        subtotal_price,\n        taxes_included as has_taxes_included,\n        token,\n        total_discounts,\n        total_duties,\n        total_line_items_price,\n        total_price,\n        total_tax,\n        total_weight,\n        cast(\n    cast(cast(updated_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as updated_at,\n        user_id,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n        \n    from fields\n)\n\nselect *\nfrom final\n), validation_errors as (\n\n    select\n        checkout_id, source_relation\n    from __dbt__cte__stg_shopify__abandoned_checkout\n    group by checkout_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:20.749946Z", "completed_at": "2024-03-18T10:43:20.773875Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:20.782543Z", "completed_at": "2024-03-18T10:43:20.782548Z"}], "thread_id": "Thread-7", "execution_time": 0.039392948150634766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__abandoned_checkout_checkout_id.7904acc8db", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__stg_shopify__abandoned_checkout as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__abandoned_checkout_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    abandoned_checkout_url\n    \n as \n    \n    abandoned_checkout_url\n    \n, \n    \n    \n    billing_address_address_1\n    \n as \n    \n    billing_address_address_1\n    \n, \n    cast(null as TEXT) as \n    \n    billing_address_address_2\n    \n , \n    \n    \n    billing_address_city\n    \n as \n    \n    billing_address_city\n    \n, \n    \n    \n    billing_address_company\n    \n as \n    \n    billing_address_company\n    \n, \n    \n    \n    billing_address_country\n    \n as \n    \n    billing_address_country\n    \n, \n    \n    \n    billing_address_country_code\n    \n as \n    \n    billing_address_country_code\n    \n, \n    \n    \n    billing_address_first_name\n    \n as \n    \n    billing_address_first_name\n    \n, \n    \n    \n    billing_address_last_name\n    \n as \n    \n    billing_address_last_name\n    \n, \n    \n    \n    billing_address_latitude\n    \n as \n    \n    billing_address_latitude\n    \n, \n    \n    \n    billing_address_longitude\n    \n as \n    \n    billing_address_longitude\n    \n, \n    \n    \n    billing_address_name\n    \n as \n    \n    billing_address_name\n    \n, \n    \n    \n    billing_address_phone\n    \n as \n    \n    billing_address_phone\n    \n, \n    \n    \n    billing_address_province\n    \n as \n    \n    billing_address_province\n    \n, \n    \n    \n    billing_address_province_code\n    \n as \n    \n    billing_address_province_code\n    \n, \n    \n    \n    billing_address_zip\n    \n as \n    \n    billing_address_zip\n    \n, \n    \n    \n    buyer_accepts_marketing\n    \n as \n    \n    buyer_accepts_marketing\n    \n, \n    \n    \n    cart_token\n    \n as \n    \n    cart_token\n    \n, \n    \n    \n    closed_at\n    \n as \n    \n    closed_at\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    customer_id\n    \n as \n    \n    customer_id\n    \n, \n    \n    \n    customer_locale\n    \n as \n    \n    customer_locale\n    \n, \n    \n    \n    device_id\n    \n as \n    \n    device_id\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    gateway\n    \n as \n    \n    gateway\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    landing_site_base_url\n    \n as \n    \n    landing_site_base_url\n    \n, \n    \n    \n    location_id\n    \n as \n    \n    location_id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    note\n    \n as \n    \n    note\n    \n, \n    \n    \n    phone\n    \n as \n    \n    phone\n    \n, \n    \n    \n    presentment_currency\n    \n as \n    \n    presentment_currency\n    \n, \n    \n    \n    referring_site\n    \n as \n    \n    referring_site\n    \n, \n    \n    \n    shipping_address_address_1\n    \n as \n    \n    shipping_address_address_1\n    \n, \n    cast(null as TEXT) as \n    \n    shipping_address_address_2\n    \n , \n    \n    \n    shipping_address_city\n    \n as \n    \n    shipping_address_city\n    \n, \n    \n    \n    shipping_address_company\n    \n as \n    \n    shipping_address_company\n    \n, \n    \n    \n    shipping_address_country\n    \n as \n    \n    shipping_address_country\n    \n, \n    \n    \n    shipping_address_country_code\n    \n as \n    \n    shipping_address_country_code\n    \n, \n    \n    \n    shipping_address_first_name\n    \n as \n    \n    shipping_address_first_name\n    \n, \n    \n    \n    shipping_address_last_name\n    \n as \n    \n    shipping_address_last_name\n    \n, \n    \n    \n    shipping_address_latitude\n    \n as \n    \n    shipping_address_latitude\n    \n, \n    \n    \n    shipping_address_longitude\n    \n as \n    \n    shipping_address_longitude\n    \n, \n    \n    \n    shipping_address_name\n    \n as \n    \n    shipping_address_name\n    \n, \n    \n    \n    shipping_address_phone\n    \n as \n    \n    shipping_address_phone\n    \n, \n    \n    \n    shipping_address_province\n    \n as \n    \n    shipping_address_province\n    \n, \n    \n    \n    shipping_address_province_code\n    \n as \n    \n    shipping_address_province_code\n    \n, \n    \n    \n    shipping_address_zip\n    \n as \n    \n    shipping_address_zip\n    \n, \n    \n    \n    source_name\n    \n as \n    \n    source_name\n    \n, \n    \n    \n    subtotal_price\n    \n as \n    \n    subtotal_price\n    \n, \n    \n    \n    taxes_included\n    \n as \n    \n    taxes_included\n    \n, \n    \n    \n    token\n    \n as \n    \n    token\n    \n, \n    \n    \n    total_discounts\n    \n as \n    \n    total_discounts\n    \n, \n    \n    \n    total_duties\n    \n as \n    \n    total_duties\n    \n, \n    \n    \n    total_line_items_price\n    \n as \n    \n    total_line_items_price\n    \n, \n    \n    \n    total_price\n    \n as \n    \n    total_price\n    \n, \n    \n    \n    total_tax\n    \n as \n    \n    total_tax\n    \n, \n    \n    \n    total_weight\n    \n as \n    \n    total_weight\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    user_id\n    \n as \n    \n    user_id\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_deleted as is_deleted,\n        abandoned_checkout_url,\n        billing_address_address_1,\n        billing_address_address_2,\n        billing_address_city,\n        billing_address_company,\n        billing_address_country,\n        billing_address_country_code,\n        billing_address_first_name,\n        billing_address_last_name,\n        billing_address_latitude,\n        billing_address_longitude,\n        billing_address_name,\n        billing_address_phone,\n        billing_address_province,\n        billing_address_province_code,\n        billing_address_zip,\n        buyer_accepts_marketing as has_buyer_accepted_marketing,\n        cart_token,\n        cast(\n    cast(cast(created_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as created_at,\n        cast(\n    cast(cast(closed_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as closed_at,\n        currency as shop_currency,\n        customer_id,\n        customer_locale,\n        device_id,\n        email,\n        gateway,\n        id as checkout_id,\n        landing_site_base_url,\n        location_id,\n        name,\n        note,\n        phone,\n        presentment_currency,\n        referring_site,\n        shipping_address_address_1,\n        shipping_address_address_2,\n        shipping_address_city,\n        shipping_address_company,\n        shipping_address_country,\n        shipping_address_country_code,\n        shipping_address_first_name,\n        shipping_address_last_name,\n        shipping_address_latitude,\n        shipping_address_longitude,\n        shipping_address_name,\n        shipping_address_phone,\n        shipping_address_province,\n        shipping_address_province_code,\n        shipping_address_zip,\n        source_name,\n        subtotal_price,\n        taxes_included as has_taxes_included,\n        token,\n        total_discounts,\n        total_duties,\n        total_line_items_price,\n        total_price,\n        total_tax,\n        total_weight,\n        cast(\n    cast(cast(updated_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as updated_at,\n        user_id,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n        \n    from fields\n)\n\nselect *\nfrom final\n) select checkout_id\nfrom __dbt__cte__stg_shopify__abandoned_checkout\nwhere checkout_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:20.783107Z", "completed_at": "2024-03-18T10:43:20.792980Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:20.794541Z", "completed_at": "2024-03-18T10:43:20.794546Z"}], "thread_id": "Thread-1", "execution_time": 0.017713069915771484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__discount_code_discount_code_id.a5590b867e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__stg_shopify__discount_code as (\n-- this model will be all NULL until you create a discount code in Shopify\n\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__discount_code_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    code\n    \n as \n    \n    code\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    price_rule_id\n    \n as \n    \n    price_rule_id\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    usage_count\n    \n as \n    \n    usage_count\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        id as discount_code_id,\n        upper(code) as code,\n        price_rule_id,\n        usage_count,\n        cast(\n    cast(cast(created_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as created_at,\n        cast(\n    cast(cast(updated_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as updated_at,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n        \n    from fields\n)\n\nselect *\nfrom final\n) select discount_code_id\nfrom __dbt__cte__stg_shopify__discount_code\nwhere discount_code_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:20.787732Z", "completed_at": "2024-03-18T10:43:20.794151Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:20.799333Z", "completed_at": "2024-03-18T10:43:20.799338Z"}], "thread_id": "Thread-3", "execution_time": 0.018232107162475586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__collection_product_collection_id__product_id__source_relation.2a7693423e", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith  __dbt__cte__stg_shopify__collection_product as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__collection_product_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    collection_id\n    \n as \n    \n    collection_id\n    \n, \n    \n    \n    product_id\n    \n as \n    \n    product_id\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        collection_id,\n        product_id,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n        \n    from fields\n)\n\nselect *\nfrom final\n), validation_errors as (\n\n    select\n        collection_id, product_id, source_relation\n    from __dbt__cte__stg_shopify__collection_product\n    group by collection_id, product_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:20.794819Z", "completed_at": "2024-03-18T10:43:20.800853Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:20.806670Z", "completed_at": "2024-03-18T10:43:20.806675Z"}], "thread_id": "Thread-7", "execution_time": 0.014166116714477539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__collection_product_collection_id.8bf72f774a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__stg_shopify__collection_product as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__collection_product_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    collection_id\n    \n as \n    \n    collection_id\n    \n, \n    \n    \n    product_id\n    \n as \n    \n    product_id\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        collection_id,\n        product_id,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n        \n    from fields\n)\n\nselect *\nfrom final\n) select collection_id\nfrom __dbt__cte__stg_shopify__collection_product\nwhere collection_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:20.802303Z", "completed_at": "2024-03-18T10:43:20.816312Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:20.816897Z", "completed_at": "2024-03-18T10:43:20.816902Z"}], "thread_id": "Thread-1", "execution_time": 0.017409086227416992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__collection_product_product_id.1e720211b1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__stg_shopify__collection_product as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__collection_product_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    collection_id\n    \n as \n    \n    collection_id\n    \n, \n    \n    \n    product_id\n    \n as \n    \n    product_id\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        collection_id,\n        product_id,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n        \n    from fields\n)\n\nselect *\nfrom final\n) select product_id\nfrom __dbt__cte__stg_shopify__collection_product\nwhere product_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:20.807792Z", "completed_at": "2024-03-18T10:43:20.817158Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:20.819031Z", "completed_at": "2024-03-18T10:43:20.819035Z"}], "thread_id": "Thread-3", "execution_time": 0.01824212074279785, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__abandoned_checkout_shipping_line_checkout_id__index__source_relation.adf831caac", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith  __dbt__cte__stg_shopify__abandoned_checkout_shipping_line as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__abandoned_checkout_shipping_line_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    carrier_identifier\n    \n as \n    \n    carrier_identifier\n    \n, \n    \n    \n    checkout_id\n    \n as \n    \n    checkout_id\n    \n, \n    \n    \n    code\n    \n as \n    \n    code\n    \n, \n    \n    \n    delivery_category\n    \n as \n    \n    delivery_category\n    \n, \n    \n    \n    delivery_expectation_range\n    \n as \n    \n    delivery_expectation_range\n    \n, \n    \n    \n    delivery_expectation_range_max\n    \n as \n    \n    delivery_expectation_range_max\n    \n, \n    \n    \n    delivery_expectation_range_min\n    \n as \n    \n    delivery_expectation_range_min\n    \n, \n    \n    \n    delivery_expectation_type\n    \n as \n    \n    delivery_expectation_type\n    \n, \n    \n    \n    discounted_price\n    \n as \n    \n    discounted_price\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    index\n    \n as \n    \n    index\n    \n, \n    \n    \n    phone\n    \n as \n    \n    phone\n    \n, \n    \n    \n    price\n    \n as \n    \n    price\n    \n, \n    \n    \n    requested_fulfillment_service_id\n    \n as \n    \n    requested_fulfillment_service_id\n    \n, \n    \n    \n    source\n    \n as \n    \n    source\n    \n, \n    \n    \n    title\n    \n as \n    \n    title\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as abandoned_checkout_shipping_line_id,\n        checkout_id,\n        index,\n        carrier_identifier,\n        code as shipping_code,\n        delivery_category,\n        delivery_expectation_range,\n        delivery_expectation_range_max,\n        delivery_expectation_range_min,\n        delivery_expectation_type,\n        discounted_price,\n        phone,\n        price,\n        requested_fulfillment_service_id,\n        source,\n        title,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n\n    from fields\n)\n\nselect *\nfrom final\n), validation_errors as (\n\n    select\n        checkout_id, index, source_relation\n    from __dbt__cte__stg_shopify__abandoned_checkout_shipping_line\n    group by checkout_id, index, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:20.813173Z", "completed_at": "2024-03-18T10:43:20.817446Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:20.819315Z", "completed_at": "2024-03-18T10:43:20.819319Z"}], "thread_id": "Thread-7", "execution_time": 0.008116006851196289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__customer_customer_id__source_relation.1b2185db25", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        customer_id, source_relation\n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__customer\"\n    group by customer_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:20.821790Z", "completed_at": "2024-03-18T10:43:20.844103Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:20.853835Z", "completed_at": "2024-03-18T10:43:20.853842Z"}], "thread_id": "Thread-1", "execution_time": 0.03625202178955078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__inventory_level_inventory_item_id__location_id__source_relation.30e02799e7", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith  __dbt__cte__stg_shopify__inventory_level as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__inventory_level_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    available\n    \n as \n    \n    available\n    \n, \n    \n    \n    inventory_item_id\n    \n as \n    \n    inventory_item_id\n    \n, \n    \n    \n    location_id\n    \n as \n    \n    location_id\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        inventory_item_id,\n        location_id,\n        available as available_quantity,\n        cast(\n    cast(cast(updated_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as updated_at,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n        \n    from fields\n)\n\nselect *\nfrom final\n), validation_errors as (\n\n    select\n        inventory_item_id, location_id, source_relation\n    from __dbt__cte__stg_shopify__inventory_level\n    group by inventory_item_id, location_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:20.844412Z", "completed_at": "2024-03-18T10:43:20.854164Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:20.857284Z", "completed_at": "2024-03-18T10:43:20.857287Z"}], "thread_id": "Thread-3", "execution_time": 0.0351870059967041, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__inventory_level_inventory_item_id.fccf494b8e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__stg_shopify__inventory_level as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__inventory_level_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    available\n    \n as \n    \n    available\n    \n, \n    \n    \n    inventory_item_id\n    \n as \n    \n    inventory_item_id\n    \n, \n    \n    \n    location_id\n    \n as \n    \n    location_id\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        inventory_item_id,\n        location_id,\n        available as available_quantity,\n        cast(\n    cast(cast(updated_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as updated_at,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n        \n    from fields\n)\n\nselect *\nfrom final\n) select inventory_item_id\nfrom __dbt__cte__stg_shopify__inventory_level\nwhere inventory_item_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:20.848139Z", "completed_at": "2024-03-18T10:43:20.854487Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:20.857574Z", "completed_at": "2024-03-18T10:43:20.857577Z"}], "thread_id": "Thread-7", "execution_time": 0.0350492000579834, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__inventory_level_location_id.92e79be57f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__stg_shopify__inventory_level as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__inventory_level_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    available\n    \n as \n    \n    available\n    \n, \n    \n    \n    inventory_item_id\n    \n as \n    \n    inventory_item_id\n    \n, \n    \n    \n    location_id\n    \n as \n    \n    location_id\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        inventory_item_id,\n        location_id,\n        available as available_quantity,\n        cast(\n    cast(cast(updated_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as updated_at,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n        \n    from fields\n)\n\nselect *\nfrom final\n) select location_id\nfrom __dbt__cte__stg_shopify__inventory_level\nwhere location_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:20.857842Z", "completed_at": "2024-03-18T10:43:20.863802Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:20.869615Z", "completed_at": "2024-03-18T10:43:20.869620Z"}], "thread_id": "Thread-4", "execution_time": 0.02877187728881836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__metafield_metafield_id__source_relation.f74f7735ca", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        metafield_id, source_relation\n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__metafield\"\n    group by metafield_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:20.864103Z", "completed_at": "2024-03-18T10:43:20.883288Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:20.884863Z", "completed_at": "2024-03-18T10:43:20.884868Z"}], "thread_id": "Thread-1", "execution_time": 0.024806976318359375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__metafield_metafield_id.456551b3c6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect metafield_id\nfrom \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__metafield\"\nwhere metafield_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:20.878740Z", "completed_at": "2024-03-18T10:43:20.885601Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:20.891388Z", "completed_at": "2024-03-18T10:43:20.891393Z"}], "thread_id": "Thread-7", "execution_time": 0.024151086807250977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__fulfillment_fulfillment_id__source_relation.680798d67a", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith  __dbt__cte__stg_shopify__fulfillment as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__fulfillment_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    location_id\n    \n as \n    \n    location_id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    order_id\n    \n as \n    \n    order_id\n    \n, \n    \n    \n    service\n    \n as \n    \n    service\n    \n, \n    \n    \n    shipment_status\n    \n as \n    \n    shipment_status\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    tracking_company\n    \n as \n    \n    tracking_company\n    \n, \n    \n    \n    tracking_number\n    \n as \n    \n    tracking_number\n    \n, \n    \n    \n    tracking_numbers\n    \n as \n    \n    tracking_numbers\n    \n, \n    \n    \n    tracking_urls\n    \n as \n    \n    tracking_urls\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        id as fulfillment_id,\n        location_id,\n        order_id,\n        name,\n        service,\n        shipment_status,\n        lower(status) as status,\n        tracking_company,\n        tracking_number,\n        tracking_numbers,\n        tracking_urls,\n        cast(\n    cast(cast(created_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as created_at,\n        cast(\n    cast(cast(updated_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as updated_at,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n\n    from fields\n)\n\nselect *\nfrom final\n), validation_errors as (\n\n    select\n        fulfillment_id, source_relation\n    from __dbt__cte__stg_shopify__fulfillment\n    group by fulfillment_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:20.869915Z", "completed_at": "2024-03-18T10:43:20.885872Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:20.891679Z", "completed_at": "2024-03-18T10:43:20.891683Z"}], "thread_id": "Thread-3", "execution_time": 0.02507615089416504, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.accepted_values_stg_shopify__fulfillment_status__pending__open__success__cancelled__error__failure.7c48600b70", "compiled": true, "compiled_code": "\n    \n    \n\nwith  __dbt__cte__stg_shopify__fulfillment as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__fulfillment_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    location_id\n    \n as \n    \n    location_id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    order_id\n    \n as \n    \n    order_id\n    \n, \n    \n    \n    service\n    \n as \n    \n    service\n    \n, \n    \n    \n    shipment_status\n    \n as \n    \n    shipment_status\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    tracking_company\n    \n as \n    \n    tracking_company\n    \n, \n    \n    \n    tracking_number\n    \n as \n    \n    tracking_number\n    \n, \n    \n    \n    tracking_numbers\n    \n as \n    \n    tracking_numbers\n    \n, \n    \n    \n    tracking_urls\n    \n as \n    \n    tracking_urls\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        id as fulfillment_id,\n        location_id,\n        order_id,\n        name,\n        service,\n        shipment_status,\n        lower(status) as status,\n        tracking_company,\n        tracking_number,\n        tracking_numbers,\n        tracking_urls,\n        cast(\n    cast(cast(created_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as created_at,\n        cast(\n    cast(cast(updated_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as updated_at,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n\n    from fields\n)\n\nselect *\nfrom final\n), all_values as (\n\n    select\n        status as value_field,\n        count(*) as n_records\n\n    from __dbt__cte__stg_shopify__fulfillment\n    group by status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'pending','open','success','cancelled','error','failure'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:20.887642Z", "completed_at": "2024-03-18T10:43:20.893981Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:20.904279Z", "completed_at": "2024-03-18T10:43:20.904284Z"}], "thread_id": "Thread-4", "execution_time": 0.024937152862548828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__fulfillment_fulfillment_id.ef5030632e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__stg_shopify__fulfillment as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__fulfillment_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    location_id\n    \n as \n    \n    location_id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    order_id\n    \n as \n    \n    order_id\n    \n, \n    \n    \n    service\n    \n as \n    \n    service\n    \n, \n    \n    \n    shipment_status\n    \n as \n    \n    shipment_status\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    tracking_company\n    \n as \n    \n    tracking_company\n    \n, \n    \n    \n    tracking_number\n    \n as \n    \n    tracking_number\n    \n, \n    \n    \n    tracking_numbers\n    \n as \n    \n    tracking_numbers\n    \n, \n    \n    \n    tracking_urls\n    \n as \n    \n    tracking_urls\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        id as fulfillment_id,\n        location_id,\n        order_id,\n        name,\n        service,\n        shipment_status,\n        lower(status) as status,\n        tracking_company,\n        tracking_number,\n        tracking_numbers,\n        tracking_urls,\n        cast(\n    cast(cast(created_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as created_at,\n        cast(\n    cast(cast(updated_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as updated_at,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n\n    from fields\n)\n\nselect *\nfrom final\n) select fulfillment_id\nfrom __dbt__cte__stg_shopify__fulfillment\nwhere fulfillment_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:20.894531Z", "completed_at": "2024-03-18T10:43:20.910408Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:20.918784Z", "completed_at": "2024-03-18T10:43:20.918788Z"}], "thread_id": "Thread-1", "execution_time": 0.02880096435546875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.accepted_values_stg_shopify__fulfillment_event_status__attempted_delivery__delivered__failure__in_transit__out_for_delivery__ready_for_pickup__picked_up__label_printed__label_purchased__confirmed.c0ab202601", "compiled": true, "compiled_code": "\n    \n    \n\nwith  __dbt__cte__stg_shopify__fulfillment_event as (\n\n\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__fulfillment_event_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    address_1\n    \n as \n    \n    address_1\n    \n, \n    \n    \n    city\n    \n as \n    \n    city\n    \n, \n    \n    \n    country\n    \n as \n    \n    country\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    estimated_delivery_at\n    \n as \n    \n    estimated_delivery_at\n    \n, \n    \n    \n    fulfillment_id\n    \n as \n    \n    fulfillment_id\n    \n, \n    \n    \n    happened_at\n    \n as \n    \n    happened_at\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    latitude\n    \n as \n    \n    latitude\n    \n, \n    \n    \n    longitude\n    \n as \n    \n    longitude\n    \n, \n    \n    \n    message\n    \n as \n    \n    message\n    \n, \n    \n    \n    order_id\n    \n as \n    \n    order_id\n    \n, \n    \n    \n    province\n    \n as \n    \n    province\n    \n, \n    \n    \n    shop_id\n    \n as \n    \n    shop_id\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    zip\n    \n as \n    \n    zip\n    \n\n\n\n        \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        id as fulfillment_event_id,\n        fulfillment_id,\n        shop_id,\n        order_id,\n        status,\n        message,\n        cast(\n    cast(cast(estimated_delivery_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as estimated_delivery_at,\n        cast(\n    cast(cast(happened_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as happened_at,\n        address_1,\n        city,\n        province,\n        country,\n        zip,\n        latitude,\n        longitude,\n        cast(\n    cast(cast(created_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as created_at,\n        cast(\n    cast(cast(updated_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as updated_at,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n\n    from fields\n\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect *\nfrom final\n), all_values as (\n\n    select\n        status as value_field,\n        count(*) as n_records\n\n    from __dbt__cte__stg_shopify__fulfillment_event\n    group by status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'attempted_delivery','delivered','failure','in_transit','out_for_delivery','ready_for_pickup','picked_up','label_printed','label_purchased','confirmed'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:20.904840Z", "completed_at": "2024-03-18T10:43:20.917069Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:20.921090Z", "completed_at": "2024-03-18T10:43:20.921093Z"}], "thread_id": "Thread-7", "execution_time": 0.02468085289001465, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__fulfillment_event_fulfillment_event_id__source_relation.bbccfe999a", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith  __dbt__cte__stg_shopify__fulfillment_event as (\n\n\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__fulfillment_event_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    address_1\n    \n as \n    \n    address_1\n    \n, \n    \n    \n    city\n    \n as \n    \n    city\n    \n, \n    \n    \n    country\n    \n as \n    \n    country\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    estimated_delivery_at\n    \n as \n    \n    estimated_delivery_at\n    \n, \n    \n    \n    fulfillment_id\n    \n as \n    \n    fulfillment_id\n    \n, \n    \n    \n    happened_at\n    \n as \n    \n    happened_at\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    latitude\n    \n as \n    \n    latitude\n    \n, \n    \n    \n    longitude\n    \n as \n    \n    longitude\n    \n, \n    \n    \n    message\n    \n as \n    \n    message\n    \n, \n    \n    \n    order_id\n    \n as \n    \n    order_id\n    \n, \n    \n    \n    province\n    \n as \n    \n    province\n    \n, \n    \n    \n    shop_id\n    \n as \n    \n    shop_id\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    zip\n    \n as \n    \n    zip\n    \n\n\n\n        \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        id as fulfillment_event_id,\n        fulfillment_id,\n        shop_id,\n        order_id,\n        status,\n        message,\n        cast(\n    cast(cast(estimated_delivery_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as estimated_delivery_at,\n        cast(\n    cast(cast(happened_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as happened_at,\n        address_1,\n        city,\n        province,\n        country,\n        zip,\n        latitude,\n        longitude,\n        cast(\n    cast(cast(created_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as created_at,\n        cast(\n    cast(cast(updated_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as updated_at,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n\n    from fields\n\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect *\nfrom final\n), validation_errors as (\n\n    select\n        fulfillment_event_id, source_relation\n    from __dbt__cte__stg_shopify__fulfillment_event\n    group by fulfillment_event_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:20.910698Z", "completed_at": "2024-03-18T10:43:20.918498Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:20.926877Z", "completed_at": "2024-03-18T10:43:20.926883Z"}], "thread_id": "Thread-3", "execution_time": 0.032525062561035156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__inventory_item_inventory_item_id__source_relation.efb946be84", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith  __dbt__cte__stg_shopify__inventory_item as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__inventory_item_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    cost\n    \n as \n    \n    cost\n    \n, \n    \n    \n    country_code_of_origin\n    \n as \n    \n    country_code_of_origin\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    province_code_of_origin\n    \n as \n    \n    province_code_of_origin\n    \n, \n    \n    \n    requires_shipping\n    \n as \n    \n    requires_shipping\n    \n, \n    \n    \n    sku\n    \n as \n    \n    sku\n    \n, \n    \n    \n    tracked\n    \n as \n    \n    tracked\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        id as inventory_item_id,\n        sku,\n        _fivetran_deleted as is_deleted, -- won't filter out for now\n        cost,\n        country_code_of_origin,\n        province_code_of_origin,\n        requires_shipping as is_shipping_required,\n        tracked as is_inventory_quantity_tracked,\n        cast(\n    cast(cast(created_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as created_at,\n        cast(\n    cast(cast(updated_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as updated_at,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n\n    from fields\n)\n\nselect *\nfrom final\n), validation_errors as (\n\n    select\n        inventory_item_id, source_relation\n    from __dbt__cte__stg_shopify__inventory_item\n    group by inventory_item_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:20.921370Z", "completed_at": "2024-03-18T10:43:20.937241Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:20.943727Z", "completed_at": "2024-03-18T10:43:20.943733Z"}], "thread_id": "Thread-4", "execution_time": 0.03182506561279297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__order_discount_code_order_id__code__source_relation.0b164cd5b1", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith  __dbt__cte__stg_shopify__order_discount_code as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__order_discount_code_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    code\n    \n as \n    \n    code\n    \n, \n    \n    \n    index\n    \n as \n    \n    index\n    \n, \n    \n    \n    order_id\n    \n as \n    \n    order_id\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        order_id,\n        upper(code) as code,\n        type,\n        amount,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n\n    from fields\n    where index = 1 -- Sanity check. index should not > 1 but open an issue if that's not the case in your data\n)\n\nselect *\nfrom final\n), validation_errors as (\n\n    select\n        order_id, code, source_relation\n    from __dbt__cte__stg_shopify__order_discount_code\n    group by order_id, code, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:20.928017Z", "completed_at": "2024-03-18T10:43:20.938969Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:20.949600Z", "completed_at": "2024-03-18T10:43:20.949604Z"}], "thread_id": "Thread-5", "execution_time": 0.03613591194152832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__inventory_item_inventory_item_id.ebb8e84fbe", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__stg_shopify__inventory_item as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__inventory_item_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    cost\n    \n as \n    \n    cost\n    \n, \n    \n    \n    country_code_of_origin\n    \n as \n    \n    country_code_of_origin\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    province_code_of_origin\n    \n as \n    \n    province_code_of_origin\n    \n, \n    \n    \n    requires_shipping\n    \n as \n    \n    requires_shipping\n    \n, \n    \n    \n    sku\n    \n as \n    \n    sku\n    \n, \n    \n    \n    tracked\n    \n as \n    \n    tracked\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        id as inventory_item_id,\n        sku,\n        _fivetran_deleted as is_deleted, -- won't filter out for now\n        cost,\n        country_code_of_origin,\n        province_code_of_origin,\n        requires_shipping as is_shipping_required,\n        tracked as is_inventory_quantity_tracked,\n        cast(\n    cast(cast(created_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as created_at,\n        cast(\n    cast(cast(updated_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as updated_at,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n\n    from fields\n)\n\nselect *\nfrom final\n) select inventory_item_id\nfrom __dbt__cte__stg_shopify__inventory_item\nwhere inventory_item_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:20.932488Z", "completed_at": "2024-03-18T10:43:20.943209Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:20.954836Z", "completed_at": "2024-03-18T10:43:20.954843Z"}], "thread_id": "Thread-8", "execution_time": 0.03687596321105957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__order_discount_code_code.067f3e6d0f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__stg_shopify__order_discount_code as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__order_discount_code_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    code\n    \n as \n    \n    code\n    \n, \n    \n    \n    index\n    \n as \n    \n    index\n    \n, \n    \n    \n    order_id\n    \n as \n    \n    order_id\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        order_id,\n        upper(code) as code,\n        type,\n        amount,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n\n    from fields\n    where index = 1 -- Sanity check. index should not > 1 but open an issue if that's not the case in your data\n)\n\nselect *\nfrom final\n) select code\nfrom __dbt__cte__stg_shopify__order_discount_code\nwhere code is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:20.939644Z", "completed_at": "2024-03-18T10:43:20.949867Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:20.958197Z", "completed_at": "2024-03-18T10:43:20.958201Z"}], "thread_id": "Thread-1", "execution_time": 0.02359294891357422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__order_discount_code_order_id.ca7b6ffa4d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__stg_shopify__order_discount_code as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__order_discount_code_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    code\n    \n as \n    \n    code\n    \n, \n    \n    \n    index\n    \n as \n    \n    index\n    \n, \n    \n    \n    order_id\n    \n as \n    \n    order_id\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        order_id,\n        upper(code) as code,\n        type,\n        amount,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n\n    from fields\n    where index = 1 -- Sanity check. index should not > 1 but open an issue if that's not the case in your data\n)\n\nselect *\nfrom final\n) select order_id\nfrom __dbt__cte__stg_shopify__order_discount_code\nwhere order_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:20.944763Z", "completed_at": "2024-03-18T10:43:20.956374Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:20.960360Z", "completed_at": "2024-03-18T10:43:20.960363Z"}], "thread_id": "Thread-7", "execution_time": 0.028425931930541992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__location_location_id__source_relation.d3455164b9", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith  __dbt__cte__stg_shopify__location as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__location_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    active\n    \n as \n    \n    active\n    \n, \n    \n    \n    address_1\n    \n as \n    \n    address_1\n    \n, \n    \n    \n    address_2\n    \n as \n    \n    address_2\n    \n, \n    \n    \n    city\n    \n as \n    \n    city\n    \n, \n    \n    \n    country\n    \n as \n    \n    country\n    \n, \n    \n    \n    country_code\n    \n as \n    \n    country_code\n    \n, \n    \n    \n    country_name\n    \n as \n    \n    country_name\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    legacy\n    \n as \n    \n    legacy\n    \n, \n    \n    \n    localized_country_name\n    \n as \n    \n    localized_country_name\n    \n, \n    \n    \n    localized_province_name\n    \n as \n    \n    localized_province_name\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    phone\n    \n as \n    \n    phone\n    \n, \n    \n    \n    province\n    \n as \n    \n    province\n    \n, \n    \n    \n    province_code\n    \n as \n    \n    province_code\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    zip\n    \n as \n    \n    zip\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        id as location_id,\n        name,\n        _fivetran_deleted as is_deleted,\n        active as is_active,\n        address_1,\n        address_2,\n        city,\n        country,\n        country_code,\n        country_name,\n        legacy as is_legacy,\n        localized_country_name,\n        localized_province_name,\n        phone,\n        province,\n        province_code,\n        zip,\n        cast(\n    cast(cast(created_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as created_at,\n        cast(\n    cast(cast(updated_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as updated_at,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n\n    from fields\n)\n\nselect *\nfrom final\n), validation_errors as (\n\n    select\n        location_id, source_relation\n    from __dbt__cte__stg_shopify__location\n    group by location_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:20.950149Z", "completed_at": "2024-03-18T10:43:20.957881Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:20.965967Z", "completed_at": "2024-03-18T10:43:20.965972Z"}], "thread_id": "Thread-3", "execution_time": 0.032948970794677734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__order_adjustment_order_adjustment_id__source_relation.00b7d10cb0", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith  __dbt__cte__stg_shopify__order_adjustment as (\n-- this model will be all NULL until you have made an order adjustment in Shopify\n\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__order_adjustment_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    order_id\n    \n as \n    \n    order_id\n    \n, \n    \n    \n    refund_id\n    \n as \n    \n    refund_id\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    amount_set\n    \n as \n    \n    amount_set\n    \n, \n    \n    \n    tax_amount\n    \n as \n    \n    tax_amount\n    \n, \n    \n    \n    tax_amount_set\n    \n as \n    \n    tax_amount_set\n    \n, \n    \n    \n    kind\n    \n as \n    \n    kind\n    \n, \n    \n    \n    reason\n    \n as \n    \n    reason\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n        \n    from base\n),\n\nfinal as (\n\n    select\n        id as order_adjustment_id,\n        order_id,\n        refund_id,\n        amount,\n        amount_set,\n        tax_amount,\n        tax_amount_set,\n        kind,\n        reason,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n\n    from fields\n)\n\nselect * \nfrom final\n), validation_errors as (\n\n    select\n        order_adjustment_id, source_relation\n    from __dbt__cte__stg_shopify__order_adjustment\n    group by order_adjustment_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:20.961016Z", "completed_at": "2024-03-18T10:43:20.976989Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:20.983657Z", "completed_at": "2024-03-18T10:43:20.983662Z"}], "thread_id": "Thread-4", "execution_time": 0.03311491012573242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__location_location_id.ee4166d1bf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__stg_shopify__location as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__location_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    active\n    \n as \n    \n    active\n    \n, \n    \n    \n    address_1\n    \n as \n    \n    address_1\n    \n, \n    \n    \n    address_2\n    \n as \n    \n    address_2\n    \n, \n    \n    \n    city\n    \n as \n    \n    city\n    \n, \n    \n    \n    country\n    \n as \n    \n    country\n    \n, \n    \n    \n    country_code\n    \n as \n    \n    country_code\n    \n, \n    \n    \n    country_name\n    \n as \n    \n    country_name\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    legacy\n    \n as \n    \n    legacy\n    \n, \n    \n    \n    localized_country_name\n    \n as \n    \n    localized_country_name\n    \n, \n    \n    \n    localized_province_name\n    \n as \n    \n    localized_province_name\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    phone\n    \n as \n    \n    phone\n    \n, \n    \n    \n    province\n    \n as \n    \n    province\n    \n, \n    \n    \n    province_code\n    \n as \n    \n    province_code\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    zip\n    \n as \n    \n    zip\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        id as location_id,\n        name,\n        _fivetran_deleted as is_deleted,\n        active as is_active,\n        address_1,\n        address_2,\n        city,\n        country,\n        country_code,\n        country_name,\n        legacy as is_legacy,\n        localized_country_name,\n        localized_province_name,\n        phone,\n        province,\n        province_code,\n        zip,\n        cast(\n    cast(cast(created_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as created_at,\n        cast(\n    cast(cast(updated_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as updated_at,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n\n    from fields\n)\n\nselect *\nfrom final\n) select location_id\nfrom __dbt__cte__stg_shopify__location\nwhere location_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:20.967311Z", "completed_at": "2024-03-18T10:43:20.978353Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:20.989542Z", "completed_at": "2024-03-18T10:43:20.989548Z"}], "thread_id": "Thread-5", "execution_time": 0.03674507141113281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__order_note_attribute_order_id__name__source_relation.b214a3d1c0", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith  __dbt__cte__stg_shopify__order_note_attribute as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__order_note_attribute_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    order_id\n    \n as \n    \n    order_id\n    \n, \n    \n    \n    value\n    \n as \n    \n    value\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        order_id,\n        name,\n        value,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n        \n    from fields\n)\n\nselect *\nfrom final\n), validation_errors as (\n\n    select\n        order_id, name, source_relation\n    from __dbt__cte__stg_shopify__order_note_attribute\n    group by order_id, name, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:20.973365Z", "completed_at": "2024-03-18T10:43:20.983390Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:20.996385Z", "completed_at": "2024-03-18T10:43:20.996390Z"}], "thread_id": "Thread-8", "execution_time": 0.037455081939697266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__order_note_attribute_name.1c77264446", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__stg_shopify__order_note_attribute as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__order_note_attribute_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    order_id\n    \n as \n    \n    order_id\n    \n, \n    \n    \n    value\n    \n as \n    \n    value\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        order_id,\n        name,\n        value,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n        \n    from fields\n)\n\nselect *\nfrom final\n) select name\nfrom __dbt__cte__stg_shopify__order_note_attribute\nwhere name is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:20.979303Z", "completed_at": "2024-03-18T10:43:20.990643Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:20.998834Z", "completed_at": "2024-03-18T10:43:20.998838Z"}], "thread_id": "Thread-1", "execution_time": 0.028181076049804688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__order_note_attribute_order_id.d710018375", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__stg_shopify__order_note_attribute as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__order_note_attribute_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    order_id\n    \n as \n    \n    order_id\n    \n, \n    \n    \n    value\n    \n as \n    \n    value\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        order_id,\n        name,\n        value,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n        \n    from fields\n)\n\nselect *\nfrom final\n) select order_id\nfrom __dbt__cte__stg_shopify__order_note_attribute\nwhere order_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:20.984214Z", "completed_at": "2024-03-18T10:43:20.997316Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:21.001066Z", "completed_at": "2024-03-18T10:43:21.001070Z"}], "thread_id": "Thread-7", "execution_time": 0.02994394302368164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__order_line_order_line_id__source_relation.c2797e7a9c", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith  __dbt__cte__stg_shopify__order_line as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__order_line_tmp\"\n\n),\n\nfields as (\n\n    select\n    \n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    fulfillable_quantity\n    \n as \n    \n    fulfillable_quantity\n    \n, \n    \n    \n    fulfillment_status\n    \n as \n    \n    fulfillment_status\n    \n, \n    \n    \n    gift_card\n    \n as \n    \n    gift_card\n    \n, \n    \n    \n    grams\n    \n as \n    \n    grams\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    index\n    \n as \n    \n    index\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    order_id\n    \n as \n    \n    order_id\n    \n, \n    \n    \n    pre_tax_price\n    \n as \n    \n    pre_tax_price\n    \n, \n    cast(null as TEXT) as \n    \n    pre_tax_price_set\n    \n , \n    \n    \n    price\n    \n as \n    \n    price\n    \n, \n    cast(null as TEXT) as \n    \n    price_set\n    \n , \n    \n    \n    product_id\n    \n as \n    \n    product_id\n    \n, \n    \n    \n    quantity\n    \n as \n    \n    quantity\n    \n, \n    \n    \n    requires_shipping\n    \n as \n    \n    requires_shipping\n    \n, \n    \n    \n    sku\n    \n as \n    \n    sku\n    \n, \n    \n    \n    taxable\n    \n as \n    \n    taxable\n    \n, \n    cast(null as TEXT) as \n    \n    tax_code\n    \n , \n    \n    \n    title\n    \n as \n    \n    title\n    \n, \n    \n    \n    total_discount\n    \n as \n    \n    total_discount\n    \n, \n    cast(null as TEXT) as \n    \n    total_discount_set\n    \n , \n    \n    \n    variant_id\n    \n as \n    \n    variant_id\n    \n, \n    cast(null as TEXT) as \n    \n    variant_title\n    \n , \n    cast(null as TEXT) as \n    \n    variant_inventory_management\n    \n , \n    \n    \n    vendor\n    \n as \n    \n    vendor\n    \n, \n    cast(null as TEXT) as \n    \n    properties\n    \n \n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n\n),\n\nfinal as (\n    \n    select \n        id as order_line_id,\n        index,\n        name,\n        order_id,\n        fulfillable_quantity,\n        fulfillment_status,\n        gift_card as is_gift_card,\n        grams,\n        pre_tax_price,\n        pre_tax_price_set,\n        price,\n        price_set,\n        product_id,\n        quantity,\n        requires_shipping as is_shipping_required,\n        sku,\n        taxable as is_taxable,\n        tax_code,\n        title,\n        total_discount,\n        total_discount_set,\n        variant_id,\n        variant_title,\n        variant_inventory_management,\n        vendor,\n        properties,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n\n        \n\n\n\n\n\n    from fields\n\n)\n\nselect * \nfrom final\n), validation_errors as (\n\n    select\n        order_line_id, source_relation\n    from __dbt__cte__stg_shopify__order_line\n    group by order_line_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:20.990907Z", "completed_at": "2024-03-18T10:43:20.999364Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:21.008241Z", "completed_at": "2024-03-18T10:43:21.008245Z"}], "thread_id": "Thread-3", "execution_time": 0.03459882736206055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__order_line_refund_order_line_refund_id__source_relation.1877420c29", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith  __dbt__cte__stg_shopify__order_line_refund as (\n-- this model will be all NULL until you have made an order line refund in Shopify\n\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__order_line_refund_tmp\"\n\n),\n\nfields as (\n\n    select\n    \n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    location_id\n    \n as \n    \n    location_id\n    \n, \n    \n    \n    order_line_id\n    \n as \n    \n    order_line_id\n    \n, \n    \n    \n    subtotal\n    \n as \n    \n    subtotal\n    \n, \n    \n    \n    subtotal_set\n    \n as \n    \n    subtotal_set\n    \n, \n    \n    \n    total_tax\n    \n as \n    \n    total_tax\n    \n, \n    \n    \n    total_tax_set\n    \n as \n    \n    total_tax_set\n    \n, \n    \n    \n    quantity\n    \n as \n    \n    quantity\n    \n, \n    \n    \n    refund_id\n    \n as \n    \n    refund_id\n    \n, \n    \n    \n    restock_type\n    \n as \n    \n    restock_type\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n\n),\n\nfinal as (\n\n    select\n        id as order_line_refund_id,\n        location_id,\n        order_line_id,\n        subtotal,\n        subtotal_set,\n        total_tax,\n        total_tax_set,\n        quantity,\n        refund_id,\n        restock_type,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n\n        \n\n\n\n\n\n    from fields\n)\n\nselect *\nfrom final\n), validation_errors as (\n\n    select\n        order_line_refund_id, source_relation\n    from __dbt__cte__stg_shopify__order_line_refund\n    group by order_line_refund_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:21.002618Z", "completed_at": "2024-03-18T10:43:21.019194Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:21.025705Z", "completed_at": "2024-03-18T10:43:21.025711Z"}], "thread_id": "Thread-4", "execution_time": 0.03262805938720703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__order_shipping_line_order_shipping_line_id__source_relation.6d1c3ae933", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith  __dbt__cte__stg_shopify__order_shipping_line as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__order_shipping_line_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    carrier_identifier\n    \n as \n    \n    carrier_identifier\n    \n, \n    \n    \n    code\n    \n as \n    \n    code\n    \n, \n    \n    \n    delivery_category\n    \n as \n    \n    delivery_category\n    \n, \n    \n    \n    discounted_price\n    \n as \n    \n    discounted_price\n    \n, \n    \n    \n    discounted_price_set\n    \n as \n    \n    discounted_price_set\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    order_id\n    \n as \n    \n    order_id\n    \n, \n    \n    \n    phone\n    \n as \n    \n    phone\n    \n, \n    \n    \n    price\n    \n as \n    \n    price\n    \n, \n    \n    \n    price_set\n    \n as \n    \n    price_set\n    \n, \n    \n    \n    requested_fulfillment_service_id\n    \n as \n    \n    requested_fulfillment_service_id\n    \n, \n    \n    \n    source\n    \n as \n    \n    source\n    \n, \n    \n    \n    title\n    \n as \n    \n    title\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        id as order_shipping_line_id,\n        order_id,\n        carrier_identifier,\n        code,\n        delivery_category,\n        discounted_price,\n        discounted_price_set,\n        phone,\n        price,\n        price_set,\n        requested_fulfillment_service_id is not null as is_third_party_required,\n        source,\n        title,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n        \n    from fields\n)\n\nselect *\nfrom final\n), validation_errors as (\n\n    select\n        order_shipping_line_id, source_relation\n    from __dbt__cte__stg_shopify__order_shipping_line\n    group by order_shipping_line_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:21.008534Z", "completed_at": "2024-03-18T10:43:21.020362Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:21.030064Z", "completed_at": "2024-03-18T10:43:21.030070Z"}], "thread_id": "Thread-5", "execution_time": 0.036798954010009766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__order_shipping_line_order_shipping_line_id.37ad762613", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__stg_shopify__order_shipping_line as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__order_shipping_line_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    carrier_identifier\n    \n as \n    \n    carrier_identifier\n    \n, \n    \n    \n    code\n    \n as \n    \n    code\n    \n, \n    \n    \n    delivery_category\n    \n as \n    \n    delivery_category\n    \n, \n    \n    \n    discounted_price\n    \n as \n    \n    discounted_price\n    \n, \n    \n    \n    discounted_price_set\n    \n as \n    \n    discounted_price_set\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    order_id\n    \n as \n    \n    order_id\n    \n, \n    \n    \n    phone\n    \n as \n    \n    phone\n    \n, \n    \n    \n    price\n    \n as \n    \n    price\n    \n, \n    \n    \n    price_set\n    \n as \n    \n    price_set\n    \n, \n    \n    \n    requested_fulfillment_service_id\n    \n as \n    \n    requested_fulfillment_service_id\n    \n, \n    \n    \n    source\n    \n as \n    \n    source\n    \n, \n    \n    \n    title\n    \n as \n    \n    title\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        id as order_shipping_line_id,\n        order_id,\n        carrier_identifier,\n        code,\n        delivery_category,\n        discounted_price,\n        discounted_price_set,\n        phone,\n        price,\n        price_set,\n        requested_fulfillment_service_id is not null as is_third_party_required,\n        source,\n        title,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n        \n    from fields\n)\n\nselect *\nfrom final\n) select order_shipping_line_id\nfrom __dbt__cte__stg_shopify__order_shipping_line\nwhere order_shipping_line_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:21.013926Z", "completed_at": "2024-03-18T10:43:21.025386Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:21.037288Z", "completed_at": "2024-03-18T10:43:21.037293Z"}], "thread_id": "Thread-8", "execution_time": 0.03729987144470215, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__order_shipping_tax_line_order_shipping_line_id__index__source_relation.f13c5fef8d", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith  __dbt__cte__stg_shopify__order_shipping_tax_line as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__order_shipping_tax_line_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    index\n    \n as \n    \n    index\n    \n, \n    \n    \n    order_shipping_line_id\n    \n as \n    \n    order_shipping_line_id\n    \n, \n    \n    \n    price\n    \n as \n    \n    price\n    \n, \n    \n    \n    price_set\n    \n as \n    \n    price_set\n    \n, \n    \n    \n    rate\n    \n as \n    \n    rate\n    \n, \n    \n    \n    title\n    \n as \n    \n    title\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        order_shipping_line_id,\n        index,\n        price,\n        price_set,\n        rate,\n        title,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n\n    from fields\n)\n\nselect *\nfrom final\n), validation_errors as (\n\n    select\n        order_shipping_line_id, index, source_relation\n    from __dbt__cte__stg_shopify__order_shipping_tax_line\n    group by order_shipping_line_id, index, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:21.020950Z", "completed_at": "2024-03-18T10:43:21.030357Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:21.038474Z", "completed_at": "2024-03-18T10:43:21.038477Z"}], "thread_id": "Thread-1", "execution_time": 0.028437376022338867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__order_shipping_tax_line_index.fd09a295cd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__stg_shopify__order_shipping_tax_line as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__order_shipping_tax_line_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    index\n    \n as \n    \n    index\n    \n, \n    \n    \n    order_shipping_line_id\n    \n as \n    \n    order_shipping_line_id\n    \n, \n    \n    \n    price\n    \n as \n    \n    price\n    \n, \n    \n    \n    price_set\n    \n as \n    \n    price_set\n    \n, \n    \n    \n    rate\n    \n as \n    \n    rate\n    \n, \n    \n    \n    title\n    \n as \n    \n    title\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        order_shipping_line_id,\n        index,\n        price,\n        price_set,\n        rate,\n        title,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n\n    from fields\n)\n\nselect *\nfrom final\n) select index\nfrom __dbt__cte__stg_shopify__order_shipping_tax_line\nwhere index is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:21.026034Z", "completed_at": "2024-03-18T10:43:21.037565Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:21.041879Z", "completed_at": "2024-03-18T10:43:21.041882Z"}], "thread_id": "Thread-7", "execution_time": 0.02399921417236328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__order_shipping_tax_line_order_shipping_line_id.0fcfb55295", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__stg_shopify__order_shipping_tax_line as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__order_shipping_tax_line_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    index\n    \n as \n    \n    index\n    \n, \n    \n    \n    order_shipping_line_id\n    \n as \n    \n    order_shipping_line_id\n    \n, \n    \n    \n    price\n    \n as \n    \n    price\n    \n, \n    \n    \n    price_set\n    \n as \n    \n    price_set\n    \n, \n    \n    \n    rate\n    \n as \n    \n    rate\n    \n, \n    \n    \n    title\n    \n as \n    \n    title\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        order_shipping_line_id,\n        index,\n        price,\n        price_set,\n        rate,\n        title,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n\n    from fields\n)\n\nselect *\nfrom final\n) select order_shipping_line_id\nfrom __dbt__cte__stg_shopify__order_shipping_tax_line\nwhere order_shipping_line_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:21.031437Z", "completed_at": "2024-03-18T10:43:21.039794Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:21.044036Z", "completed_at": "2024-03-18T10:43:21.044039Z"}], "thread_id": "Thread-3", "execution_time": 0.028671979904174805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__order_url_tag_order_id__key__source_relation.568d75c0cf", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith  __dbt__cte__stg_shopify__order_url_tag as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__order_url_tag_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    key\n    \n as \n    \n    key\n    \n, \n    \n    \n    order_id\n    \n as \n    \n    order_id\n    \n, \n    \n    \n    value\n    \n as \n    \n    value\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        order_id,\n        key,\n        value,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n        \n    from fields\n)\n\nselect *\nfrom final\n), validation_errors as (\n\n    select\n        order_id, key, source_relation\n    from __dbt__cte__stg_shopify__order_url_tag\n    group by order_id, key, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:21.044310Z", "completed_at": "2024-03-18T10:43:21.063006Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:21.070506Z", "completed_at": "2024-03-18T10:43:21.070513Z"}], "thread_id": "Thread-4", "execution_time": 0.036263227462768555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__order_url_tag_key.4644eec325", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__stg_shopify__order_url_tag as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__order_url_tag_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    key\n    \n as \n    \n    key\n    \n, \n    \n    \n    order_id\n    \n as \n    \n    order_id\n    \n, \n    \n    \n    value\n    \n as \n    \n    value\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        order_id,\n        key,\n        value,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n        \n    from fields\n)\n\nselect *\nfrom final\n) select key\nfrom __dbt__cte__stg_shopify__order_url_tag\nwhere key is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:21.048805Z", "completed_at": "2024-03-18T10:43:21.063264Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:21.071068Z", "completed_at": "2024-03-18T10:43:21.071071Z"}], "thread_id": "Thread-5", "execution_time": 0.0373530387878418, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__order_url_tag_order_id.84a8f408d1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__stg_shopify__order_url_tag as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__order_url_tag_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    key\n    \n as \n    \n    key\n    \n, \n    \n    \n    order_id\n    \n as \n    \n    order_id\n    \n, \n    \n    \n    value\n    \n as \n    \n    value\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        order_id,\n        key,\n        value,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n        \n    from fields\n)\n\nselect *\nfrom final\n) select order_id\nfrom __dbt__cte__stg_shopify__order_url_tag\nwhere order_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:21.054161Z", "completed_at": "2024-03-18T10:43:21.064625Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:21.077347Z", "completed_at": "2024-03-18T10:43:21.077351Z"}], "thread_id": "Thread-8", "execution_time": 0.03658604621887207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__order_tag_order_id__index__source_relation.9a2443bd07", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith  __dbt__cte__stg_shopify__order_tag as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__order_tag_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    index\n    \n as \n    \n    index\n    \n, \n    \n    \n    order_id\n    \n as \n    \n    order_id\n    \n, \n    \n    \n    value\n    \n as \n    \n    value\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        order_id,\n        index,\n        value,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n\n    from fields\n)\n\nselect *\nfrom final\n), validation_errors as (\n\n    select\n        order_id, index, source_relation\n    from __dbt__cte__stg_shopify__order_tag\n    group by order_id, index, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:21.059326Z", "completed_at": "2024-03-18T10:43:21.070229Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:21.078193Z", "completed_at": "2024-03-18T10:43:21.078197Z"}], "thread_id": "Thread-1", "execution_time": 0.028236865997314453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__order_tag_index.c8a0f2d6a2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__stg_shopify__order_tag as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__order_tag_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    index\n    \n as \n    \n    index\n    \n, \n    \n    \n    order_id\n    \n as \n    \n    order_id\n    \n, \n    \n    \n    value\n    \n as \n    \n    value\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        order_id,\n        index,\n        value,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n\n    from fields\n)\n\nselect *\nfrom final\n) select index\nfrom __dbt__cte__stg_shopify__order_tag\nwhere index is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:21.065162Z", "completed_at": "2024-03-18T10:43:21.076826Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:21.081260Z", "completed_at": "2024-03-18T10:43:21.081264Z"}], "thread_id": "Thread-7", "execution_time": 0.024892807006835938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__order_tag_order_id.cfe1531ec6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__stg_shopify__order_tag as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__order_tag_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    index\n    \n as \n    \n    index\n    \n, \n    \n    \n    order_id\n    \n as \n    \n    order_id\n    \n, \n    \n    \n    value\n    \n as \n    \n    value\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        order_id,\n        index,\n        value,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n\n    from fields\n)\n\nselect *\nfrom final\n) select order_id\nfrom __dbt__cte__stg_shopify__order_tag\nwhere order_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:21.071384Z", "completed_at": "2024-03-18T10:43:21.079059Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:21.083758Z", "completed_at": "2024-03-18T10:43:21.083761Z"}], "thread_id": "Thread-3", "execution_time": 0.02724003791809082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__order_order_id__source_relation.81d10381c1", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith  __dbt__cte__stg_shopify__order as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__order_tmp\"\n\n),\n\nfields as (\n\n    select\n    \n        \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    processed_at\n    \n as \n    \n    processed_at\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    user_id\n    \n as \n    \n    user_id\n    \n, \n    \n    \n    total_discounts\n    \n as \n    \n    total_discounts\n    \n, \n    cast(null as TEXT) as \n    \n    total_discounts_set\n    \n , \n    \n    \n    total_line_items_price\n    \n as \n    \n    total_line_items_price\n    \n, \n    cast(null as TEXT) as \n    \n    total_line_items_price_set\n    \n , \n    \n    \n    total_price\n    \n as \n    \n    total_price\n    \n, \n    cast(null as TEXT) as \n    \n    total_price_set\n    \n , \n    cast(null as TEXT) as \n    \n    total_tax_set\n    \n , \n    \n    \n    total_tax\n    \n as \n    \n    total_tax\n    \n, \n    \n    \n    source_name\n    \n as \n    \n    source_name\n    \n, \n    \n    \n    subtotal_price\n    \n as \n    \n    subtotal_price\n    \n, \n    \n    \n    taxes_included\n    \n as \n    \n    taxes_included\n    \n, \n    \n    \n    total_weight\n    \n as \n    \n    total_weight\n    \n, \n    cast(null as float) as \n    \n    total_tip_received\n    \n , \n    \n    \n    landing_site_base_url\n    \n as \n    \n    landing_site_base_url\n    \n, \n    \n    \n    location_id\n    \n as \n    \n    location_id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    note\n    \n as \n    \n    note\n    \n, \n    \n    \n    number\n    \n as \n    \n    number\n    \n, \n    \n    \n    order_number\n    \n as \n    \n    order_number\n    \n, \n    \n    \n    cancel_reason\n    \n as \n    \n    cancel_reason\n    \n, \n    \n    \n    cancelled_at\n    \n as \n    \n    cancelled_at\n    \n, \n    \n    \n    cart_token\n    \n as \n    \n    cart_token\n    \n, \n    \n    \n    checkout_token\n    \n as \n    \n    checkout_token\n    \n, \n    \n    \n    closed_at\n    \n as \n    \n    closed_at\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    customer_id\n    \n as \n    \n    customer_id\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    financial_status\n    \n as \n    \n    financial_status\n    \n, \n    \n    \n    fulfillment_status\n    \n as \n    \n    fulfillment_status\n    \n, \n    \n    \n    referring_site\n    \n as \n    \n    referring_site\n    \n, \n    \n    \n    billing_address_address_1\n    \n as \n    \n    billing_address_address_1\n    \n, \n    \n    \n    billing_address_address_2\n    \n as \n    \n    billing_address_address_2\n    \n, \n    \n    \n    billing_address_city\n    \n as \n    \n    billing_address_city\n    \n, \n    \n    \n    billing_address_company\n    \n as \n    \n    billing_address_company\n    \n, \n    \n    \n    billing_address_country\n    \n as \n    \n    billing_address_country\n    \n, \n    \n    \n    billing_address_country_code\n    \n as \n    \n    billing_address_country_code\n    \n, \n    \n    \n    billing_address_first_name\n    \n as \n    \n    billing_address_first_name\n    \n, \n    \n    \n    billing_address_last_name\n    \n as \n    \n    billing_address_last_name\n    \n, \n    \n    \n    billing_address_latitude\n    \n as \n    \n    billing_address_latitude\n    \n, \n    \n    \n    billing_address_longitude\n    \n as \n    \n    billing_address_longitude\n    \n, \n    \n    \n    billing_address_name\n    \n as \n    \n    billing_address_name\n    \n, \n    \n    \n    billing_address_phone\n    \n as \n    \n    billing_address_phone\n    \n, \n    \n    \n    billing_address_province\n    \n as \n    \n    billing_address_province\n    \n, \n    \n    \n    billing_address_province_code\n    \n as \n    \n    billing_address_province_code\n    \n, \n    \n    \n    billing_address_zip\n    \n as \n    \n    billing_address_zip\n    \n, \n    \n    \n    browser_ip\n    \n as \n    \n    browser_ip\n    \n, \n    \n    \n    buyer_accepts_marketing\n    \n as \n    \n    buyer_accepts_marketing\n    \n, \n    \n    \n    total_shipping_price_set\n    \n as \n    \n    total_shipping_price_set\n    \n, \n    \n    \n    shipping_address_address_1\n    \n as \n    \n    shipping_address_address_1\n    \n, \n    \n    \n    shipping_address_address_2\n    \n as \n    \n    shipping_address_address_2\n    \n, \n    \n    \n    shipping_address_city\n    \n as \n    \n    shipping_address_city\n    \n, \n    \n    \n    shipping_address_company\n    \n as \n    \n    shipping_address_company\n    \n, \n    \n    \n    shipping_address_country\n    \n as \n    \n    shipping_address_country\n    \n, \n    \n    \n    shipping_address_country_code\n    \n as \n    \n    shipping_address_country_code\n    \n, \n    \n    \n    shipping_address_first_name\n    \n as \n    \n    shipping_address_first_name\n    \n, \n    \n    \n    shipping_address_last_name\n    \n as \n    \n    shipping_address_last_name\n    \n, \n    \n    \n    shipping_address_latitude\n    \n as \n    \n    shipping_address_latitude\n    \n, \n    \n    \n    shipping_address_longitude\n    \n as \n    \n    shipping_address_longitude\n    \n, \n    \n    \n    shipping_address_name\n    \n as \n    \n    shipping_address_name\n    \n, \n    \n    \n    shipping_address_phone\n    \n as \n    \n    shipping_address_phone\n    \n, \n    \n    \n    shipping_address_province\n    \n as \n    \n    shipping_address_province\n    \n, \n    \n    \n    shipping_address_province_code\n    \n as \n    \n    shipping_address_province_code\n    \n, \n    \n    \n    shipping_address_zip\n    \n as \n    \n    shipping_address_zip\n    \n, \n    \n    \n    test\n    \n as \n    \n    test\n    \n, \n    \n    \n    token\n    \n as \n    \n    token\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    cast(null as integer) as \n    \n    app_id\n    \n , \n    cast(null as integer) as \n    \n    checkout_id\n    \n , \n    cast(null as TEXT) as \n    \n    client_details_user_agent\n    \n , \n    cast(null as TEXT) as \n    \n    customer_locale\n    \n , \n    cast(null as TEXT) as \n    \n    order_status_url\n    \n , \n    cast(null as TEXT) as \n    \n    presentment_currency\n    \n , \n    cast(null as boolean) as \n    \n    confirmed\n    \n \n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n\n),\n\nfinal as (\n\n    select \n        id as order_id,\n        user_id,\n        total_discounts,\n        total_discounts_set,\n        total_line_items_price,\n        total_line_items_price_set,\n        total_price,\n        total_price_set,\n        total_tax_set,\n        total_tax,\n        source_name,\n        subtotal_price,\n        taxes_included as has_taxes_included,\n        total_weight,\n        total_tip_received,\n        landing_site_base_url,\n        location_id,\n        name,\n        note,\n        number,\n        order_number,\n        cancel_reason,\n        cart_token,\n        checkout_token,\n        cast(\n    cast(cast(created_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as created_timestamp,\n        cast(\n    cast(cast(cancelled_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as cancelled_timestamp,\n        cast(\n    cast(cast(closed_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as closed_timestamp,\n        cast(\n    cast(cast(processed_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as processed_timestamp,\n        cast(\n    cast(cast(updated_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as updated_timestamp,\n        currency,\n        customer_id,\n        lower(email) as email,\n        financial_status,\n        fulfillment_status,\n        referring_site,\n        billing_address_address_1,\n        billing_address_address_2,\n        billing_address_city,\n        billing_address_company,\n        billing_address_country,\n        billing_address_country_code,\n        billing_address_first_name,\n        billing_address_last_name,\n        billing_address_latitude,\n        billing_address_longitude,\n        billing_address_name,\n        billing_address_phone,\n        billing_address_province,\n        billing_address_province_code,\n        billing_address_zip,\n        browser_ip,\n        total_shipping_price_set,\n        shipping_address_address_1,\n        shipping_address_address_2,\n        shipping_address_city,\n        shipping_address_company,\n        shipping_address_country,\n        shipping_address_country_code,\n        shipping_address_first_name,\n        shipping_address_last_name,\n        shipping_address_latitude,\n        shipping_address_longitude,\n        shipping_address_name,\n        shipping_address_phone,\n        shipping_address_province,\n        shipping_address_province_code,\n        shipping_address_zip,\n        token,\n        app_id,\n        checkout_id,\n        client_details_user_agent,\n        customer_locale,\n        order_status_url,\n        presentment_currency,\n        test as is_test_order,\n        _fivetran_deleted as is_deleted,\n        buyer_accepts_marketing as has_buyer_accepted_marketing,\n        confirmed as is_confirmed,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(is_test_order, false)\nand not coalesce(is_deleted, false)\n), validation_errors as (\n\n    select\n        order_id, source_relation\n    from __dbt__cte__stg_shopify__order\n    group by order_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:21.085072Z", "completed_at": "2024-03-18T10:43:21.107166Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:21.123438Z", "completed_at": "2024-03-18T10:43:21.123449Z"}], "thread_id": "Thread-4", "execution_time": 0.0498960018157959, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.accepted_values_stg_shopify__price_rule_target_type__line_item__shipping_line.921059c008", "compiled": true, "compiled_code": "\n    \n    \n\nwith  __dbt__cte__stg_shopify__price_rule as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__price_rule_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    allocation_limit\n    \n as \n    \n    allocation_limit\n    \n, \n    \n    \n    allocation_method\n    \n as \n    \n    allocation_method\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    customer_selection\n    \n as \n    \n    customer_selection\n    \n, \n    \n    \n    ends_at\n    \n as \n    \n    ends_at\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    once_per_customer\n    \n as \n    \n    once_per_customer\n    \n, \n    \n    \n    prerequisite_quantity_range\n    \n as \n    \n    prerequisite_quantity_range\n    \n, \n    \n    \n    prerequisite_shipping_price_range\n    \n as \n    \n    prerequisite_shipping_price_range\n    \n, \n    \n    \n    prerequisite_subtotal_range\n    \n as \n    \n    prerequisite_subtotal_range\n    \n, \n    \n    \n    prerequisite_to_entitlement_purchase_prerequisite_amount\n    \n as \n    \n    prerequisite_to_entitlement_purchase_prerequisite_amount\n    \n, \n    \n    \n    quantity_ratio_entitled_quantity\n    \n as \n    \n    quantity_ratio_entitled_quantity\n    \n, \n    \n    \n    quantity_ratio_prerequisite_quantity\n    \n as \n    \n    quantity_ratio_prerequisite_quantity\n    \n, \n    \n    \n    starts_at\n    \n as \n    \n    starts_at\n    \n, \n    \n    \n    target_selection\n    \n as \n    \n    target_selection\n    \n, \n    \n    \n    target_type\n    \n as \n    \n    target_type\n    \n, \n    \n    \n    title\n    \n as \n    \n    title\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    usage_limit\n    \n as \n    \n    usage_limit\n    \n, \n    \n    \n    value\n    \n as \n    \n    value\n    \n, \n    \n    \n    value_type\n    \n as \n    \n    value_type\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        id as price_rule_id,\n        allocation_limit,\n        allocation_method,\n        customer_selection,\n        once_per_customer as is_once_per_customer,\n        prerequisite_quantity_range as prereq_min_quantity,\n        prerequisite_shipping_price_range as prereq_max_shipping_price,\n        prerequisite_subtotal_range as prereq_min_subtotal,\n        prerequisite_to_entitlement_purchase_prerequisite_amount as prereq_min_purchase_quantity_for_entitlement,\n        quantity_ratio_entitled_quantity as prereq_buy_x_get_this,\n        quantity_ratio_prerequisite_quantity as prereq_buy_this_get_y,\n        target_selection,\n        target_type,\n        title,\n        usage_limit,\n        value,\n        value_type,\n        cast(\n    cast(cast(starts_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as starts_at,\n        cast(\n    cast(cast(ends_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as ends_at,\n        cast(\n    cast(cast(created_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as created_at,\n        cast(\n    cast(cast(updated_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as updated_at,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n\n    from fields\n)\n\nselect *\nfrom final\n), all_values as (\n\n    select\n        target_type as value_field,\n        count(*) as n_records\n\n    from __dbt__cte__stg_shopify__price_rule\n    group by target_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'line_item','shipping_line'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:21.091727Z", "completed_at": "2024-03-18T10:43:21.108213Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:21.129862Z", "completed_at": "2024-03-18T10:43:21.129872Z"}], "thread_id": "Thread-5", "execution_time": 0.04986405372619629, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.accepted_values_stg_shopify__price_rule_value_type__percentage__fixed_amount.65eceed909", "compiled": true, "compiled_code": "\n    \n    \n\nwith  __dbt__cte__stg_shopify__price_rule as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__price_rule_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    allocation_limit\n    \n as \n    \n    allocation_limit\n    \n, \n    \n    \n    allocation_method\n    \n as \n    \n    allocation_method\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    customer_selection\n    \n as \n    \n    customer_selection\n    \n, \n    \n    \n    ends_at\n    \n as \n    \n    ends_at\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    once_per_customer\n    \n as \n    \n    once_per_customer\n    \n, \n    \n    \n    prerequisite_quantity_range\n    \n as \n    \n    prerequisite_quantity_range\n    \n, \n    \n    \n    prerequisite_shipping_price_range\n    \n as \n    \n    prerequisite_shipping_price_range\n    \n, \n    \n    \n    prerequisite_subtotal_range\n    \n as \n    \n    prerequisite_subtotal_range\n    \n, \n    \n    \n    prerequisite_to_entitlement_purchase_prerequisite_amount\n    \n as \n    \n    prerequisite_to_entitlement_purchase_prerequisite_amount\n    \n, \n    \n    \n    quantity_ratio_entitled_quantity\n    \n as \n    \n    quantity_ratio_entitled_quantity\n    \n, \n    \n    \n    quantity_ratio_prerequisite_quantity\n    \n as \n    \n    quantity_ratio_prerequisite_quantity\n    \n, \n    \n    \n    starts_at\n    \n as \n    \n    starts_at\n    \n, \n    \n    \n    target_selection\n    \n as \n    \n    target_selection\n    \n, \n    \n    \n    target_type\n    \n as \n    \n    target_type\n    \n, \n    \n    \n    title\n    \n as \n    \n    title\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    usage_limit\n    \n as \n    \n    usage_limit\n    \n, \n    \n    \n    value\n    \n as \n    \n    value\n    \n, \n    \n    \n    value_type\n    \n as \n    \n    value_type\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        id as price_rule_id,\n        allocation_limit,\n        allocation_method,\n        customer_selection,\n        once_per_customer as is_once_per_customer,\n        prerequisite_quantity_range as prereq_min_quantity,\n        prerequisite_shipping_price_range as prereq_max_shipping_price,\n        prerequisite_subtotal_range as prereq_min_subtotal,\n        prerequisite_to_entitlement_purchase_prerequisite_amount as prereq_min_purchase_quantity_for_entitlement,\n        quantity_ratio_entitled_quantity as prereq_buy_x_get_this,\n        quantity_ratio_prerequisite_quantity as prereq_buy_this_get_y,\n        target_selection,\n        target_type,\n        title,\n        usage_limit,\n        value,\n        value_type,\n        cast(\n    cast(cast(starts_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as starts_at,\n        cast(\n    cast(cast(ends_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as ends_at,\n        cast(\n    cast(cast(created_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as created_at,\n        cast(\n    cast(cast(updated_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as updated_at,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n\n    from fields\n)\n\nselect *\nfrom final\n), all_values as (\n\n    select\n        value_type as value_field,\n        count(*) as n_records\n\n    from __dbt__cte__stg_shopify__price_rule\n    group by value_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'percentage','fixed_amount'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:21.097865Z", "completed_at": "2024-03-18T10:43:21.117435Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:21.131132Z", "completed_at": "2024-03-18T10:43:21.131136Z"}], "thread_id": "Thread-8", "execution_time": 0.04975175857543945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__price_rule_price_rule_id__source_relation.56ce313bee", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith  __dbt__cte__stg_shopify__price_rule as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__price_rule_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    allocation_limit\n    \n as \n    \n    allocation_limit\n    \n, \n    \n    \n    allocation_method\n    \n as \n    \n    allocation_method\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    customer_selection\n    \n as \n    \n    customer_selection\n    \n, \n    \n    \n    ends_at\n    \n as \n    \n    ends_at\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    once_per_customer\n    \n as \n    \n    once_per_customer\n    \n, \n    \n    \n    prerequisite_quantity_range\n    \n as \n    \n    prerequisite_quantity_range\n    \n, \n    \n    \n    prerequisite_shipping_price_range\n    \n as \n    \n    prerequisite_shipping_price_range\n    \n, \n    \n    \n    prerequisite_subtotal_range\n    \n as \n    \n    prerequisite_subtotal_range\n    \n, \n    \n    \n    prerequisite_to_entitlement_purchase_prerequisite_amount\n    \n as \n    \n    prerequisite_to_entitlement_purchase_prerequisite_amount\n    \n, \n    \n    \n    quantity_ratio_entitled_quantity\n    \n as \n    \n    quantity_ratio_entitled_quantity\n    \n, \n    \n    \n    quantity_ratio_prerequisite_quantity\n    \n as \n    \n    quantity_ratio_prerequisite_quantity\n    \n, \n    \n    \n    starts_at\n    \n as \n    \n    starts_at\n    \n, \n    \n    \n    target_selection\n    \n as \n    \n    target_selection\n    \n, \n    \n    \n    target_type\n    \n as \n    \n    target_type\n    \n, \n    \n    \n    title\n    \n as \n    \n    title\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    usage_limit\n    \n as \n    \n    usage_limit\n    \n, \n    \n    \n    value\n    \n as \n    \n    value\n    \n, \n    \n    \n    value_type\n    \n as \n    \n    value_type\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        id as price_rule_id,\n        allocation_limit,\n        allocation_method,\n        customer_selection,\n        once_per_customer as is_once_per_customer,\n        prerequisite_quantity_range as prereq_min_quantity,\n        prerequisite_shipping_price_range as prereq_max_shipping_price,\n        prerequisite_subtotal_range as prereq_min_subtotal,\n        prerequisite_to_entitlement_purchase_prerequisite_amount as prereq_min_purchase_quantity_for_entitlement,\n        quantity_ratio_entitled_quantity as prereq_buy_x_get_this,\n        quantity_ratio_prerequisite_quantity as prereq_buy_this_get_y,\n        target_selection,\n        target_type,\n        title,\n        usage_limit,\n        value,\n        value_type,\n        cast(\n    cast(cast(starts_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as starts_at,\n        cast(\n    cast(cast(ends_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as ends_at,\n        cast(\n    cast(cast(created_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as created_at,\n        cast(\n    cast(cast(updated_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as updated_at,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n\n    from fields\n)\n\nselect *\nfrom final\n), validation_errors as (\n\n    select\n        price_rule_id, source_relation\n    from __dbt__cte__stg_shopify__price_rule\n    group by price_rule_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:21.103636Z", "completed_at": "2024-03-18T10:43:21.122598Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:21.131716Z", "completed_at": "2024-03-18T10:43:21.131719Z"}], "thread_id": "Thread-1", "execution_time": 0.049777984619140625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__price_rule_price_rule_id.a7160b00e0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__stg_shopify__price_rule as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__price_rule_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    allocation_limit\n    \n as \n    \n    allocation_limit\n    \n, \n    \n    \n    allocation_method\n    \n as \n    \n    allocation_method\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    customer_selection\n    \n as \n    \n    customer_selection\n    \n, \n    \n    \n    ends_at\n    \n as \n    \n    ends_at\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    once_per_customer\n    \n as \n    \n    once_per_customer\n    \n, \n    \n    \n    prerequisite_quantity_range\n    \n as \n    \n    prerequisite_quantity_range\n    \n, \n    \n    \n    prerequisite_shipping_price_range\n    \n as \n    \n    prerequisite_shipping_price_range\n    \n, \n    \n    \n    prerequisite_subtotal_range\n    \n as \n    \n    prerequisite_subtotal_range\n    \n, \n    \n    \n    prerequisite_to_entitlement_purchase_prerequisite_amount\n    \n as \n    \n    prerequisite_to_entitlement_purchase_prerequisite_amount\n    \n, \n    \n    \n    quantity_ratio_entitled_quantity\n    \n as \n    \n    quantity_ratio_entitled_quantity\n    \n, \n    \n    \n    quantity_ratio_prerequisite_quantity\n    \n as \n    \n    quantity_ratio_prerequisite_quantity\n    \n, \n    \n    \n    starts_at\n    \n as \n    \n    starts_at\n    \n, \n    \n    \n    target_selection\n    \n as \n    \n    target_selection\n    \n, \n    \n    \n    target_type\n    \n as \n    \n    target_type\n    \n, \n    \n    \n    title\n    \n as \n    \n    title\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    usage_limit\n    \n as \n    \n    usage_limit\n    \n, \n    \n    \n    value\n    \n as \n    \n    value\n    \n, \n    \n    \n    value_type\n    \n as \n    \n    value_type\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        id as price_rule_id,\n        allocation_limit,\n        allocation_method,\n        customer_selection,\n        once_per_customer as is_once_per_customer,\n        prerequisite_quantity_range as prereq_min_quantity,\n        prerequisite_shipping_price_range as prereq_max_shipping_price,\n        prerequisite_subtotal_range as prereq_min_subtotal,\n        prerequisite_to_entitlement_purchase_prerequisite_amount as prereq_min_purchase_quantity_for_entitlement,\n        quantity_ratio_entitled_quantity as prereq_buy_x_get_this,\n        quantity_ratio_prerequisite_quantity as prereq_buy_this_get_y,\n        target_selection,\n        target_type,\n        title,\n        usage_limit,\n        value,\n        value_type,\n        cast(\n    cast(cast(starts_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as starts_at,\n        cast(\n    cast(cast(ends_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as ends_at,\n        cast(\n    cast(cast(created_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as created_at,\n        cast(\n    cast(cast(updated_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as updated_at,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n\n    from fields\n)\n\nselect *\nfrom final\n) select price_rule_id\nfrom __dbt__cte__stg_shopify__price_rule\nwhere price_rule_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:21.117770Z", "completed_at": "2024-03-18T10:43:21.130231Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:21.135219Z", "completed_at": "2024-03-18T10:43:21.135223Z"}], "thread_id": "Thread-7", "execution_time": 0.04035782814025879, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__product_product_id__source_relation.48b32ab6a2", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith  __dbt__cte__stg_shopify__product as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__product_tmp\"\n\n),\n\nfields as (\n\n    select\n    \n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    handle\n    \n as \n    \n    handle\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    product_type\n    \n as \n    \n    product_type\n    \n, \n    \n    \n    published_at\n    \n as \n    \n    published_at\n    \n, \n    \n    \n    published_scope\n    \n as \n    \n    published_scope\n    \n, \n    \n    \n    title\n    \n as \n    \n    title\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    vendor\n    \n as \n    \n    vendor\n    \n, \n    cast(null as TEXT) as \n    \n    status\n    \n \n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n\n),\n\nfinal as (\n    \n    select\n        id as product_id,\n        handle,\n        product_type,\n        published_scope,\n        title,\n        vendor,\n        status,\n        _fivetran_deleted as is_deleted,\n        cast(\n    cast(cast(created_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as created_timestamp,\n        cast(\n    cast(cast(updated_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as updated_timestamp,\n        cast(\n    cast(cast(published_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as published_timestamp,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n\n        \n\n\n\n\n\nfrom fields\n\n)\n\nselect * \nfrom final\n), validation_errors as (\n\n    select\n        product_id, source_relation\n    from __dbt__cte__stg_shopify__product\n    group by product_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:21.124268Z", "completed_at": "2024-03-18T10:43:21.132826Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:21.137906Z", "completed_at": "2024-03-18T10:43:21.137911Z"}], "thread_id": "Thread-3", "execution_time": 0.032386064529418945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__product_image_product_image_id__source_relation.9614191ead", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith  __dbt__cte__stg_shopify__product_image as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__product_image_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    height\n    \n as \n    \n    height\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    position\n    \n as \n    \n    position\n    \n, \n    \n    \n    product_id\n    \n as \n    \n    product_id\n    \n, \n    \n    \n    src\n    \n as \n    \n    src\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    variant_ids\n    \n as \n    \n    variant_ids\n    \n, \n    \n    \n    width\n    \n as \n    \n    width\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        id as product_image_id,\n        product_id,\n        height,\n        position,\n        src,\n        variant_ids,\n        width,\n        cast(\n    cast(cast(created_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as created_at,\n        cast(\n    cast(cast(updated_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as updated_at,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect *\nfrom final\n), validation_errors as (\n\n    select\n        product_image_id, source_relation\n    from __dbt__cte__stg_shopify__product_image\n    group by product_image_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:21.140558Z", "completed_at": "2024-03-18T10:43:21.160361Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:21.195353Z", "completed_at": "2024-03-18T10:43:21.195358Z"}], "thread_id": "Thread-4", "execution_time": 0.06195688247680664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__product_image_product_image_id.911df72b9c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__stg_shopify__product_image as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__product_image_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    height\n    \n as \n    \n    height\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    position\n    \n as \n    \n    position\n    \n, \n    \n    \n    product_id\n    \n as \n    \n    product_id\n    \n, \n    \n    \n    src\n    \n as \n    \n    src\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    variant_ids\n    \n as \n    \n    variant_ids\n    \n, \n    \n    \n    width\n    \n as \n    \n    width\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        id as product_image_id,\n        product_id,\n        height,\n        position,\n        src,\n        variant_ids,\n        width,\n        cast(\n    cast(cast(created_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as created_at,\n        cast(\n    cast(cast(updated_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as updated_at,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect *\nfrom final\n) select product_image_id\nfrom __dbt__cte__stg_shopify__product_image\nwhere product_image_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:21.146478Z", "completed_at": "2024-03-18T10:43:21.160693Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:21.196234Z", "completed_at": "2024-03-18T10:43:21.196238Z"}], "thread_id": "Thread-5", "execution_time": 0.06221795082092285, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__product_tag_product_id__index__source_relation.995253e0cc", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith  __dbt__cte__stg_shopify__product_tag as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__product_tag_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    index\n    \n as \n    \n    index\n    \n, \n    \n    \n    product_id\n    \n as \n    \n    product_id\n    \n, \n    \n    \n    value\n    \n as \n    \n    value\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        product_id,\n        index,\n        value,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n\n    from fields\n)\n\nselect *\nfrom final\n), validation_errors as (\n\n    select\n        product_id, index, source_relation\n    from __dbt__cte__stg_shopify__product_tag\n    group by product_id, index, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:21.155379Z", "completed_at": "2024-03-18T10:43:21.188646Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:21.198675Z", "completed_at": "2024-03-18T10:43:21.198679Z"}], "thread_id": "Thread-1", "execution_time": 0.0624699592590332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__product_tag_product_id.2b27a85ed3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__stg_shopify__product_tag as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__product_tag_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    index\n    \n as \n    \n    index\n    \n, \n    \n    \n    product_id\n    \n as \n    \n    product_id\n    \n, \n    \n    \n    value\n    \n as \n    \n    value\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        product_id,\n        index,\n        value,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n\n    from fields\n)\n\nselect *\nfrom final\n) select product_id\nfrom __dbt__cte__stg_shopify__product_tag\nwhere product_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:21.151925Z", "completed_at": "2024-03-18T10:43:21.189406Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:21.199464Z", "completed_at": "2024-03-18T10:43:21.199467Z"}], "thread_id": "Thread-8", "execution_time": 0.06368398666381836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__product_tag_index.fb66bd9019", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__stg_shopify__product_tag as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__product_tag_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    index\n    \n as \n    \n    index\n    \n, \n    \n    \n    product_id\n    \n as \n    \n    product_id\n    \n, \n    \n    \n    value\n    \n as \n    \n    value\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        product_id,\n        index,\n        value,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n\n    from fields\n)\n\nselect *\nfrom final\n) select index\nfrom __dbt__cte__stg_shopify__product_tag\nwhere index is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:21.179166Z", "completed_at": "2024-03-18T10:43:21.195654Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:21.200921Z", "completed_at": "2024-03-18T10:43:21.200925Z"}], "thread_id": "Thread-7", "execution_time": 0.05246782302856445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__product_variant_variant_id__source_relation.7506695ec0", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith  __dbt__cte__stg_shopify__product_variant as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__product_variant_tmp\"\n\n),\n\nfields as (\n\n    select\n    \n        \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    product_id\n    \n as \n    \n    product_id\n    \n, \n    \n    \n    inventory_item_id\n    \n as \n    \n    inventory_item_id\n    \n, \n    \n    \n    image_id\n    \n as \n    \n    image_id\n    \n, \n    \n    \n    title\n    \n as \n    \n    title\n    \n, \n    \n    \n    price\n    \n as \n    \n    price\n    \n, \n    \n    \n    sku\n    \n as \n    \n    sku\n    \n, \n    \n    \n    position\n    \n as \n    \n    position\n    \n, \n    \n    \n    inventory_policy\n    \n as \n    \n    inventory_policy\n    \n, \n    \n    \n    compare_at_price\n    \n as \n    \n    compare_at_price\n    \n, \n    \n    \n    fulfillment_service\n    \n as \n    \n    fulfillment_service\n    \n, \n    \n    \n    inventory_management\n    \n as \n    \n    inventory_management\n    \n, \n    \n    \n    taxable\n    \n as \n    \n    taxable\n    \n, \n    \n    \n    barcode\n    \n as \n    \n    barcode\n    \n, \n    \n    \n    grams\n    \n as \n    \n    grams\n    \n, \n    \n    \n    old_inventory_quantity\n    \n as \n    \n    old_inventory_quantity\n    \n, \n    \n    \n    inventory_quantity\n    \n as \n    \n    inventory_quantity\n    \n, \n    \n    \n    weight\n    \n as \n    \n    weight\n    \n, \n    \n    \n    weight_unit\n    \n as \n    \n    weight_unit\n    \n, \n    \n    \n    option_1\n    \n as \n    \n    option_1\n    \n, \n    \n    \n    option_2\n    \n as \n    \n    option_2\n    \n, \n    \n    \n    option_3\n    \n as \n    \n    option_3\n    \n, \n    \n    \n    tax_code\n    \n as \n    \n    tax_code\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n\n),\n\nfinal as (\n\n    select\n        id as variant_id,\n        product_id,\n        inventory_item_id,\n        image_id,\n        title,\n        price,\n        sku,\n        position,\n        inventory_policy,\n        compare_at_price,\n        fulfillment_service,\n        inventory_management,\n        taxable as is_taxable,\n        barcode,\n        grams,\n        coalesce(inventory_quantity, old_inventory_quantity) as inventory_quantity,\n        weight,\n        weight_unit,\n        option_1,\n        option_2,\n        option_3,\n        tax_code,\n        cast(\n    cast(cast(created_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as created_timestamp,\n        cast(\n    cast(cast(updated_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as updated_timestamp,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final\n), validation_errors as (\n\n    select\n        variant_id, source_relation\n    from __dbt__cte__stg_shopify__product_variant\n    group by variant_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:21.189887Z", "completed_at": "2024-03-18T10:43:21.198158Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:21.203140Z", "completed_at": "2024-03-18T10:43:21.203144Z"}], "thread_id": "Thread-3", "execution_time": 0.04913520812988281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__shop_shop_id__source_relation.29a0875415", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith  __dbt__cte__stg_shopify__shop as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__shop_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    address_1\n    \n as \n    \n    address_1\n    \n, \n    \n    \n    address_2\n    \n as \n    \n    address_2\n    \n, \n    \n    \n    checkout_api_supported\n    \n as \n    \n    checkout_api_supported\n    \n, \n    \n    \n    city\n    \n as \n    \n    city\n    \n, \n    \n    \n    cookie_consent_level\n    \n as \n    \n    cookie_consent_level\n    \n, \n    \n    \n    country\n    \n as \n    \n    country\n    \n, \n    \n    \n    country_code\n    \n as \n    \n    country_code\n    \n, \n    \n    \n    country_name\n    \n as \n    \n    country_name\n    \n, \n    \n    \n    county_taxes\n    \n as \n    \n    county_taxes\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    customer_email\n    \n as \n    \n    customer_email\n    \n, \n    \n    \n    domain\n    \n as \n    \n    domain\n    \n, \n    \n    \n    eligible_for_card_reader_giveaway\n    \n as \n    \n    eligible_for_card_reader_giveaway\n    \n, \n    \n    \n    eligible_for_payments\n    \n as \n    \n    eligible_for_payments\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    enabled_presentment_currencies\n    \n as \n    \n    enabled_presentment_currencies\n    \n, \n    \n    \n    google_apps_domain\n    \n as \n    \n    google_apps_domain\n    \n, \n    \n    \n    google_apps_login_enabled\n    \n as \n    \n    google_apps_login_enabled\n    \n, \n    \n    \n    has_discounts\n    \n as \n    \n    has_discounts\n    \n, \n    \n    \n    has_gift_cards\n    \n as \n    \n    has_gift_cards\n    \n, \n    \n    \n    has_storefront\n    \n as \n    \n    has_storefront\n    \n, \n    \n    \n    iana_timezone\n    \n as \n    \n    iana_timezone\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    latitude\n    \n as \n    \n    latitude\n    \n, \n    \n    \n    longitude\n    \n as \n    \n    longitude\n    \n, \n    \n    \n    money_format\n    \n as \n    \n    money_format\n    \n, \n    \n    \n    money_in_emails_format\n    \n as \n    \n    money_in_emails_format\n    \n, \n    \n    \n    money_with_currency_format\n    \n as \n    \n    money_with_currency_format\n    \n, \n    \n    \n    money_with_currency_in_emails_format\n    \n as \n    \n    money_with_currency_in_emails_format\n    \n, \n    \n    \n    myshopify_domain\n    \n as \n    \n    myshopify_domain\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    password_enabled\n    \n as \n    \n    password_enabled\n    \n, \n    \n    \n    phone\n    \n as \n    \n    phone\n    \n, \n    \n    \n    plan_display_name\n    \n as \n    \n    plan_display_name\n    \n, \n    \n    \n    plan_name\n    \n as \n    \n    plan_name\n    \n, \n    \n    \n    pre_launch_enabled\n    \n as \n    \n    pre_launch_enabled\n    \n, \n    \n    \n    primary_locale\n    \n as \n    \n    primary_locale\n    \n, \n    \n    \n    province\n    \n as \n    \n    province\n    \n, \n    \n    \n    province_code\n    \n as \n    \n    province_code\n    \n, \n    \n    \n    requires_extra_payments_agreement\n    \n as \n    \n    requires_extra_payments_agreement\n    \n, \n    \n    \n    setup_required\n    \n as \n    \n    setup_required\n    \n, \n    \n    \n    shop_owner\n    \n as \n    \n    shop_owner\n    \n, \n    \n    \n    source\n    \n as \n    \n    source\n    \n, \n    \n    \n    tax_shipping\n    \n as \n    \n    tax_shipping\n    \n, \n    \n    \n    taxes_included\n    \n as \n    \n    taxes_included\n    \n, \n    \n    \n    timezone\n    \n as \n    \n    timezone\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    weight_unit\n    \n as \n    \n    weight_unit\n    \n, \n    \n    \n    zip\n    \n as \n    \n    zip\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        id as shop_id,\n        name,\n        _fivetran_deleted as is_deleted,\n        address_1,\n        address_2,\n        city,\n        province,\n        province_code,\n        country,\n        country_code,\n        country_name,\n        zip,\n        latitude,\n        longitude,\n        case when county_taxes is null then false else county_taxes end as has_county_taxes,\n        currency,\n        enabled_presentment_currencies,\n        customer_email,\n        email,\n        domain,\n        phone,\n        timezone,\n        iana_timezone,\n        primary_locale,\n        weight_unit,\n        myshopify_domain,\n        cookie_consent_level,\n        shop_owner,\n        source,\n        tax_shipping as has_shipping_taxes,\n        case when taxes_included is null then false else taxes_included end as has_taxes_included_in_price,\n        has_discounts,\n        has_gift_cards,\n        has_storefront,\n        checkout_api_supported as has_checkout_api_supported,\n        eligible_for_card_reader_giveaway as is_eligible_for_card_reader_giveaway,\n        eligible_for_payments as is_eligible_for_payments,\n        google_apps_domain,\n        case when google_apps_login_enabled is null then false else google_apps_login_enabled end as is_google_apps_login_enabled,\n        money_format,\n        money_in_emails_format,\n        money_with_currency_format,\n        money_with_currency_in_emails_format,\n        plan_display_name,\n        plan_name,\n        password_enabled as is_password_enabled,\n        pre_launch_enabled as is_pre_launch_enabled,\n        requires_extra_payments_agreement as is_extra_payments_agreement_required,\n        setup_required as is_setup_required,\n        cast(\n    cast(cast(created_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as created_at,\n        cast(\n    cast(cast(updated_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as updated_at,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n\n    from fields\n)\n\nselect *\nfrom final\n), validation_errors as (\n\n    select\n        shop_id, source_relation\n    from __dbt__cte__stg_shopify__shop\n    group by shop_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:21.204866Z", "completed_at": "2024-03-18T10:43:21.220895Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:21.230502Z", "completed_at": "2024-03-18T10:43:21.230510Z"}], "thread_id": "Thread-2", "execution_time": 0.03159189224243164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__shop_shop_id.42e70e2fbe", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__stg_shopify__shop as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__shop_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    address_1\n    \n as \n    \n    address_1\n    \n, \n    \n    \n    address_2\n    \n as \n    \n    address_2\n    \n, \n    \n    \n    checkout_api_supported\n    \n as \n    \n    checkout_api_supported\n    \n, \n    \n    \n    city\n    \n as \n    \n    city\n    \n, \n    \n    \n    cookie_consent_level\n    \n as \n    \n    cookie_consent_level\n    \n, \n    \n    \n    country\n    \n as \n    \n    country\n    \n, \n    \n    \n    country_code\n    \n as \n    \n    country_code\n    \n, \n    \n    \n    country_name\n    \n as \n    \n    country_name\n    \n, \n    \n    \n    county_taxes\n    \n as \n    \n    county_taxes\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    customer_email\n    \n as \n    \n    customer_email\n    \n, \n    \n    \n    domain\n    \n as \n    \n    domain\n    \n, \n    \n    \n    eligible_for_card_reader_giveaway\n    \n as \n    \n    eligible_for_card_reader_giveaway\n    \n, \n    \n    \n    eligible_for_payments\n    \n as \n    \n    eligible_for_payments\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    enabled_presentment_currencies\n    \n as \n    \n    enabled_presentment_currencies\n    \n, \n    \n    \n    google_apps_domain\n    \n as \n    \n    google_apps_domain\n    \n, \n    \n    \n    google_apps_login_enabled\n    \n as \n    \n    google_apps_login_enabled\n    \n, \n    \n    \n    has_discounts\n    \n as \n    \n    has_discounts\n    \n, \n    \n    \n    has_gift_cards\n    \n as \n    \n    has_gift_cards\n    \n, \n    \n    \n    has_storefront\n    \n as \n    \n    has_storefront\n    \n, \n    \n    \n    iana_timezone\n    \n as \n    \n    iana_timezone\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    latitude\n    \n as \n    \n    latitude\n    \n, \n    \n    \n    longitude\n    \n as \n    \n    longitude\n    \n, \n    \n    \n    money_format\n    \n as \n    \n    money_format\n    \n, \n    \n    \n    money_in_emails_format\n    \n as \n    \n    money_in_emails_format\n    \n, \n    \n    \n    money_with_currency_format\n    \n as \n    \n    money_with_currency_format\n    \n, \n    \n    \n    money_with_currency_in_emails_format\n    \n as \n    \n    money_with_currency_in_emails_format\n    \n, \n    \n    \n    myshopify_domain\n    \n as \n    \n    myshopify_domain\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    password_enabled\n    \n as \n    \n    password_enabled\n    \n, \n    \n    \n    phone\n    \n as \n    \n    phone\n    \n, \n    \n    \n    plan_display_name\n    \n as \n    \n    plan_display_name\n    \n, \n    \n    \n    plan_name\n    \n as \n    \n    plan_name\n    \n, \n    \n    \n    pre_launch_enabled\n    \n as \n    \n    pre_launch_enabled\n    \n, \n    \n    \n    primary_locale\n    \n as \n    \n    primary_locale\n    \n, \n    \n    \n    province\n    \n as \n    \n    province\n    \n, \n    \n    \n    province_code\n    \n as \n    \n    province_code\n    \n, \n    \n    \n    requires_extra_payments_agreement\n    \n as \n    \n    requires_extra_payments_agreement\n    \n, \n    \n    \n    setup_required\n    \n as \n    \n    setup_required\n    \n, \n    \n    \n    shop_owner\n    \n as \n    \n    shop_owner\n    \n, \n    \n    \n    source\n    \n as \n    \n    source\n    \n, \n    \n    \n    tax_shipping\n    \n as \n    \n    tax_shipping\n    \n, \n    \n    \n    taxes_included\n    \n as \n    \n    taxes_included\n    \n, \n    \n    \n    timezone\n    \n as \n    \n    timezone\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    weight_unit\n    \n as \n    \n    weight_unit\n    \n, \n    \n    \n    zip\n    \n as \n    \n    zip\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        id as shop_id,\n        name,\n        _fivetran_deleted as is_deleted,\n        address_1,\n        address_2,\n        city,\n        province,\n        province_code,\n        country,\n        country_code,\n        country_name,\n        zip,\n        latitude,\n        longitude,\n        case when county_taxes is null then false else county_taxes end as has_county_taxes,\n        currency,\n        enabled_presentment_currencies,\n        customer_email,\n        email,\n        domain,\n        phone,\n        timezone,\n        iana_timezone,\n        primary_locale,\n        weight_unit,\n        myshopify_domain,\n        cookie_consent_level,\n        shop_owner,\n        source,\n        tax_shipping as has_shipping_taxes,\n        case when taxes_included is null then false else taxes_included end as has_taxes_included_in_price,\n        has_discounts,\n        has_gift_cards,\n        has_storefront,\n        checkout_api_supported as has_checkout_api_supported,\n        eligible_for_card_reader_giveaway as is_eligible_for_card_reader_giveaway,\n        eligible_for_payments as is_eligible_for_payments,\n        google_apps_domain,\n        case when google_apps_login_enabled is null then false else google_apps_login_enabled end as is_google_apps_login_enabled,\n        money_format,\n        money_in_emails_format,\n        money_with_currency_format,\n        money_with_currency_in_emails_format,\n        plan_display_name,\n        plan_name,\n        password_enabled as is_password_enabled,\n        pre_launch_enabled as is_pre_launch_enabled,\n        requires_extra_payments_agreement as is_extra_payments_agreement_required,\n        setup_required as is_setup_required,\n        cast(\n    cast(cast(created_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as created_at,\n        cast(\n    cast(cast(updated_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as updated_at,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n\n    from fields\n)\n\nselect *\nfrom final\n) select shop_id\nfrom __dbt__cte__stg_shopify__shop\nwhere shop_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:21.216294Z", "completed_at": "2024-03-18T10:43:21.229839Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:21.232423Z", "completed_at": "2024-03-18T10:43:21.232427Z"}], "thread_id": "Thread-5", "execution_time": 0.029529094696044922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__tax_line_order_line_id__index__source_relation.f01b294800", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith  __dbt__cte__stg_shopify__tax_line as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__tax_line_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    index\n    \n as \n    \n    index\n    \n, \n    \n    \n    order_line_id\n    \n as \n    \n    order_line_id\n    \n, \n    \n    \n    price\n    \n as \n    \n    price\n    \n, \n    \n    \n    price_set\n    \n as \n    \n    price_set\n    \n, \n    \n    \n    rate\n    \n as \n    \n    rate\n    \n, \n    \n    \n    title\n    \n as \n    \n    title\n    \n\n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        index,\n        order_line_id,\n        price,\n        price_set,\n        rate,\n        title,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n\n    from fields\n)\n\nselect *\nfrom final\n), validation_errors as (\n\n    select\n        order_line_id, index, source_relation\n    from __dbt__cte__stg_shopify__tax_line\n    group by order_line_id, index, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:21.210578Z", "completed_at": "2024-03-18T10:43:21.230128Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:21.232709Z", "completed_at": "2024-03-18T10:43:21.232712Z"}], "thread_id": "Thread-4", "execution_time": 0.03147292137145996, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__refund_refund_id__source_relation.cd4dbc2b35", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith  __dbt__cte__stg_shopify__refund as (\n-- this model will be all NULL until you have made a refund in Shopify\n\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__refund_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    note\n    \n as \n    \n    note\n    \n, \n    \n    \n    order_id\n    \n as \n    \n    order_id\n    \n, \n    \n    \n    processed_at\n    \n as \n    \n    processed_at\n    \n, \n    \n    \n    restock\n    \n as \n    \n    restock\n    \n, \n    \n    \n    total_duties_set\n    \n as \n    \n    total_duties_set\n    \n, \n    \n    \n    user_id\n    \n as \n    \n    user_id\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n        \n    from base\n),\n\nfinal as (\n\n    select\n        id as refund_id,\n        note,\n        order_id,\n        restock,\n        total_duties_set,\n        user_id,\n        cast(\n    cast(cast(created_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as created_at,\n        cast(\n    cast(cast(processed_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as processed_at,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n\n    from fields\n)\n\nselect * \nfrom final\n), validation_errors as (\n\n    select\n        refund_id, source_relation\n    from __dbt__cte__stg_shopify__refund\n    group by refund_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:21.221215Z", "completed_at": "2024-03-18T10:43:21.231890Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:21.234554Z", "completed_at": "2024-03-18T10:43:21.234557Z"}], "thread_id": "Thread-1", "execution_time": 0.025855064392089844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__tender_transaction_transaction_id__source_relation.96e8ff578b", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith  __dbt__cte__stg_shopify__tender_transaction as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__tender_transaction_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    order_id\n    \n as \n    \n    order_id\n    \n, \n    \n    \n    payment_method\n    \n as \n    \n    payment_method\n    \n, \n    \n    \n    processed_at\n    \n as \n    \n    processed_at\n    \n, \n    \n    \n    remote_reference\n    \n as \n    \n    remote_reference\n    \n, \n    \n    \n    test\n    \n as \n    \n    test\n    \n, \n    \n    \n    user_id\n    \n as \n    \n    user_id\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        id as transaction_id,\n        order_id,\n        amount,\n        currency,\n        payment_method,\n        remote_reference,\n        user_id,\n        cast(\n    cast(cast(processed_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as processed_at,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n\n    from fields\n    where not coalesce(test, false)\n)\n\nselect *\nfrom final\n), validation_errors as (\n\n    select\n        transaction_id, source_relation\n    from __dbt__cte__stg_shopify__tender_transaction\n    group by transaction_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:21.225987Z", "completed_at": "2024-03-18T10:43:21.232169Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:21.234836Z", "completed_at": "2024-03-18T10:43:21.234839Z"}], "thread_id": "Thread-8", "execution_time": 0.02571392059326172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__tender_transaction_transaction_id.61935430b1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__stg_shopify__tender_transaction as (\nwith base as (\n\n    select * \n    from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__tender_transaction_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    order_id\n    \n as \n    \n    order_id\n    \n, \n    \n    \n    payment_method\n    \n as \n    \n    payment_method\n    \n, \n    \n    \n    processed_at\n    \n as \n    \n    processed_at\n    \n, \n    \n    \n    remote_reference\n    \n as \n    \n    remote_reference\n    \n, \n    \n    \n    test\n    \n as \n    \n    test\n    \n, \n    \n    \n    user_id\n    \n as \n    \n    user_id\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        id as transaction_id,\n        order_id,\n        amount,\n        currency,\n        payment_method,\n        remote_reference,\n        user_id,\n        cast(\n    cast(cast(processed_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as processed_at,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n\n    from fields\n    where not coalesce(test, false)\n)\n\nselect *\nfrom final\n) select transaction_id\nfrom __dbt__cte__stg_shopify__tender_transaction\nwhere transaction_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-18T10:43:21.275711Z", "completed_at": "2024-03-18T10:43:21.281437Z"}, {"name": "execute", "started_at": "2024-03-18T10:43:21.281962Z", "completed_at": "2024-03-18T10:43:21.281968Z"}], "thread_id": "Thread-7", "execution_time": 0.007330179214477539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__transaction_transaction_id__source_relation.d55a33652a", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith  __dbt__cte__stg_shopify__transaction as (\nwith base as (\n\n    select * from \"postgres\".\"shopify_source_integration_tests_10_stg_shopify\".\"stg_shopify__transaction_tmp\"\n\n),\n\nfields as (\n\n    select\n\n        \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    order_id\n    \n as \n    \n    order_id\n    \n, \n    \n    \n    refund_id\n    \n as \n    \n    refund_id\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    processed_at\n    \n as \n    \n    processed_at\n    \n, \n    \n    \n    device_id\n    \n as \n    \n    device_id\n    \n, \n    \n    \n    gateway\n    \n as \n    \n    gateway\n    \n, \n    \n    \n    source_name\n    \n as \n    \n    source_name\n    \n, \n    \n    \n    message\n    \n as \n    \n    message\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    location_id\n    \n as \n    \n    location_id\n    \n, \n    \n    \n    parent_id\n    \n as \n    \n    parent_id\n    \n, \n    \n    \n    payment_avs_result_code\n    \n as \n    \n    payment_avs_result_code\n    \n, \n    \n    \n    payment_credit_card_bin\n    \n as \n    \n    payment_credit_card_bin\n    \n, \n    \n    \n    payment_cvv_result_code\n    \n as \n    \n    payment_cvv_result_code\n    \n, \n    \n    \n    payment_credit_card_number\n    \n as \n    \n    payment_credit_card_number\n    \n, \n    \n    \n    payment_credit_card_company\n    \n as \n    \n    payment_credit_card_company\n    \n, \n    \n    \n    kind\n    \n as \n    \n    kind\n    \n, \n    \n    \n    receipt\n    \n as \n    \n    receipt\n    \n, \n    \n    \n    currency_exchange_id\n    \n as \n    \n    currency_exchange_id\n    \n, \n    \n    \n    currency_exchange_adjustment\n    \n as \n    \n    currency_exchange_adjustment\n    \n, \n    \n    \n    currency_exchange_original_amount\n    \n as \n    \n    currency_exchange_original_amount\n    \n, \n    \n    \n    currency_exchange_final_amount\n    \n as \n    \n    currency_exchange_final_amount\n    \n, \n    \n    \n    currency_exchange_currency\n    \n as \n    \n    currency_exchange_currency\n    \n, \n    \n    \n    error_code\n    \n as \n    \n    error_code\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    test\n    \n as \n    \n    test\n    \n, \n    \n    \n    user_id\n    \n as \n    \n    user_id\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    cast(null as timestamp) as \n    \n    authorization_expires_at\n    \n , \n    \n    \n        \n            \n            \"authorization\"\n            \n        \n    \n as authorization_code \n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n\n),\n\nfinal as (\n\n    select \n        id as transaction_id,\n        order_id,\n        refund_id,\n        amount,\n        device_id,\n        gateway,\n        source_name,\n        message,\n        currency,\n        location_id,\n        parent_id,\n        payment_avs_result_code,\n        payment_credit_card_bin,\n        payment_cvv_result_code,\n        payment_credit_card_number,\n        payment_credit_card_company,\n        kind,\n        receipt,\n        currency_exchange_id,\n        currency_exchange_adjustment,\n        currency_exchange_original_amount,\n        currency_exchange_final_amount,\n        currency_exchange_currency,\n        error_code,\n        status,\n        user_id,\n        authorization_code,\n        cast(\n    cast(cast(created_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as created_timestamp,\n        cast(\n    cast(cast(processed_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as processed_timestamp,\n        cast(\n    cast(cast(authorization_expires_at as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as authorization_expires_at,\n        cast(\n    cast(cast(_fivetran_synced as timestamp) as timestamp)\n        at time zone 'UTC' at time zone 'UTC' as timestamp\n) as _fivetran_synced,\n        source_relation\n\n        \n\n\n\n\n\n    from fields\n    where not coalesce(test, false)\n)\n\nselect * \nfrom final\n), validation_errors as (\n\n    select\n        transaction_id, source_relation\n    from __dbt__cte__stg_shopify__transaction\n    group by transaction_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}], "elapsed_time": 5.579370021820068, "args": {"printer_width": 80, "log_level": "info", "log_format": "default", "print": true, "log_level_file": "debug", "cache_selected_only": false, "exclude": [], "static_parser": true, "warn_error_options": {"include": [], "exclude": []}, "profiles_dir": "/Users/catherinefritz/.dbt", "favor_state": false, "version_check": true, "introspect": true, "show_resource_report": false, "defer": false, "use_colors": true, "compile": true, "strict_mode": false, "vars": {}, "which": "generate", "invocation_command": "dbt docs generate", "write_json": true, "project_dir": "/Users/catherinefritz/Documents/dbt_packages/shopify/dbt_shopify_source/integration_tests", "partial_parse": true, "enable_legacy_logger": false, "static": false, "send_anonymous_usage_stats": true, "log_file_max_bytes": 10485760, "populate_cache": true, "log_format_file": "debug", "log_path": "/Users/catherinefritz/Documents/dbt_packages/shopify/dbt_shopify_source/integration_tests/logs", "partial_parse_file_diff": true, "select": [], "quiet": false, "use_colors_file": true, "empty_catalog": false, "indirect_selection": "eager", "macro_debugging": false}}